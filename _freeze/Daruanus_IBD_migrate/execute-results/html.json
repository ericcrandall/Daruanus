{
  "hash": "dbeaf7b3583479e41778f82d159a1192",
  "result": {
    "markdown": "---\ntitle: \"Isolation by Distance and Migration Analysis for Dascyllus aruanus\"\nauthor: \"Eric Crandall\"\nformat:\n  html:\n    theme: solar\n    toc: true\n    toc-float: true\n    toc-depth: 5\n    df-print: paged\n    smooth-scroll: true\n    citations-hover: true\neditor: source\nbibliography: \"../IBD_Kernels/IBD_Kernels.bib\"\nwarning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(readxl)\nlibrary(adegenet)\nlibrary(gdistance)\nlibrary(pegas)\nlibrary(hierfstat)\nlibrary(raster)\nlibrary(rgdal)\nlibrary(tidyverse)\nlibrary(graph4lg)\nlibrary(coda)\nlibrary(knitr)\nlibrary(forcats)\nlibrary(strataG)\nlibrary(EnvStats)\nlibrary(genepopedit)\nlibrary(perm)\nlibrary(data.table)\n\nsource(\"IBD_functions.R\")\n```\n:::\n\n\n\nCecile Fauvelot has kindly shared a giant (n=1358) microsatellite dataset for *Dascyllus aruanus*, the white tailed or humbug damsel. These have been sampled from Papua New Guinea, New Caledonia, Fiji and the Society Islands/Tuamotus. \n\n![White Tailed Damsel](figures/Humbug_dascyllus.jpg)\n\n\n\n![Sample Sites](figures/Da_samplesites.jpg)\n\n# Read and convert data\n\nHad to do a little conversion in bbedit to ready the Excel formatted data for input into R\n\n## Read in the data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n#read in the data\nDaruanus.gen <- read.genepop(\"data/Daruanus_Fauvelot.gen\", ncode = 3L)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n Converting data from a Genepop .gen file to a genind object... \n\n\nFile description:  Dascyllus aruanus all populations 1358 individuals \n\n...done.\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# rename the populations to just the text values\nDaruanus.gen@pop <- Daruanus.gen@pop %>% str_extract(\"[A-Za-z]+\") %>% as.factor()\n\n# read in the locality information\nDaruanus.sites <- read_excel(\"data/Daruanus_sites.xlsx\")\n\nDaruanus.gen@pop %>% tibble(pop = as.character(.)) %>% count(pop)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"pop\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Go\",\"2\":\"55\"},{\"1\":\"Hie\",\"2\":\"47\"},{\"1\":\"Lar\",\"2\":\"51\"},{\"1\":\"Lion\",\"2\":\"49\"},{\"1\":\"Lolo\",\"2\":\"9\"},{\"1\":\"Manu\",\"2\":\"14\"},{\"1\":\"Mara\",\"2\":\"52\"},{\"1\":\"Mata\",\"2\":\"48\"},{\"1\":\"MBO\",\"2\":\"50\"},{\"1\":\"Mo\",\"2\":\"264\"},{\"1\":\"Muaiv\",\"2\":\"54\"},{\"1\":\"Nadi\",\"2\":\"51\"},{\"1\":\"Puna\",\"2\":\"25\"},{\"1\":\"QBW\",\"2\":\"54\"},{\"1\":\"Rangi\",\"2\":\"43\"},{\"1\":\"Suva\",\"2\":\"56\"},{\"1\":\"Taga\",\"2\":\"52\"},{\"1\":\"Tahaa\",\"2\":\"36\"},{\"1\":\"Taka\",\"2\":\"30\"},{\"1\":\"Tave\",\"2\":\"50\"},{\"1\":\"Tem\",\"2\":\"64\"},{\"1\":\"Ten\",\"2\":\"52\"},{\"1\":\"Tetia\",\"2\":\"52\"},{\"1\":\"Tote\",\"2\":\"53\"},{\"1\":\"Yanu\",\"2\":\"47\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Test for HWE\n\nTest for HWE. First look at the number of populations that have HWE departures for each locus. Then look at the distribution of p-values following @waplesTestingHardyWeinberg2014. A flat distribution is fine, but enrichment for low p-values suggests that the locus is not globally at HWE.\n\n::: {.panel-tabset}\n\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseparated_pops <- seppop(Daruanus.gen)\n\n# perform HWE test\nhw <- map(separated_pops, hw.test)\n \nhw2 <- do.call(rbind,hw) %>% as_tibble(rownames = \"locus\") %>%  \n                group_by(locus) %>%\n        summarize(outofhwe = length(which(Pr.exact < 0.05)), \n             outofhwe_prop = length(which(Pr.exact < 0.05))/length(hw),\n             meanp = mean(Pr.exact))\n\n\n\n\npvalues<- do.call(rbind,hw) %>% as_tibble(rownames = \"locus\") %>%  \n          group_by(locus) %>% \n     ggplot(aes(x=Pr.exact)) + \n                    geom_histogram(bins=10) + \n                    facet_wrap(~locus)\n```\n:::\n\n\n\n### Hardy-Weinberg Stats\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhw2\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"locus\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"outofhwe\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"outofhwe_prop\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"meanp\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"304\",\"2\":\"2\",\"3\":\"0.08\",\"4\":\"0.46564\"},{\"1\":\"331\",\"2\":\"1\",\"3\":\"0.04\",\"4\":\"0.45576\"},{\"1\":\"360\",\"2\":\"0\",\"3\":\"0.00\",\"4\":\"0.54784\"},{\"1\":\"408\",\"2\":\"19\",\"3\":\"0.76\",\"4\":\"0.03784\"},{\"1\":\"494\",\"2\":\"15\",\"3\":\"0.60\",\"4\":\"0.16916\"},{\"1\":\"523\",\"2\":\"4\",\"3\":\"0.16\",\"4\":\"0.32728\"},{\"1\":\"542\",\"2\":\"4\",\"3\":\"0.16\",\"4\":\"0.42236\"},{\"1\":\"565\",\"2\":\"1\",\"3\":\"0.04\",\"4\":\"0.33048\"},{\"1\":\"589\",\"2\":\"3\",\"3\":\"0.12\",\"4\":\"0.43824\"},{\"1\":\"590\",\"2\":\"3\",\"3\":\"0.12\",\"4\":\"0.46480\"},{\"1\":\"593\",\"2\":\"6\",\"3\":\"0.24\",\"4\":\"0.32520\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### P-Values Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\npvalues\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n:::\n  \nIt's pretty clear we need to zap loci 408, 494, and 593. 565 is a little weird, but let's keep it.\n\n### Drop Some Loci\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlocNames(Daruanus.gen)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"304\" \"408\" \"331\" \"589\" \"494\" \"523\" \"360\" \"565\" \"542\" \"593\" \"590\"\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nDaruanus.gen <- Daruanus.gen[loc=-c(2,5,10)]\n\n#convert to strataG gtypes\nDaruanus.gtypes <- genind2gtypes(Daruanus.gen)\n\n#genind_to_genepop(Daruanus.gen, output = \"Daruanus/Daruanus_All_8locus.txt\")\n```\n:::\n\n\n## Split by Archipelago\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n#split them again\nseparated_pops <- seppop(Daruanus.gen)\n\n#split off the Fiji samples\nfijipops <- Daruanus.sites %>% filter(Region==\"Fiji\")\nDaruanus.Fiji <- repool(separated_pops[fijipops$Abbr])\n\n#split off the NC samples\nNCpops <- Daruanus.sites %>% filter(Region==\"NC\") %>% filter(Abbr!=\"Hie\")\nDaruanus.NC <- repool(separated_pops[NCpops$Abbr])\n\n#split off the FP samples\nFPpops <- Daruanus.sites %>% filter(Region == \"FP\") %>% \n  filter(Abbr %in% c(\"Puna\",\"Tetia\", \"Tem\",\"Mo\",\"Tahaa\"))\nDaruanus.FP <- repool(separated_pops[FPpops$Abbr])\n\n#genind_to_genepop(Daruanus.NC,output = \"Daruanus/NC/Daruanus_NC.txt\")\n#genind_to_genepop(Daruanus.Fiji,output = \"Daruanus/Fiji/Daruanus_Fiji.txt\")\n#genind_to_genepop(Daruanus.FP,output = \"Daruanus/FP/Daruanus_FP.txt\")\n```\n:::\n\n\n# Calculate Effective Size\n\n\n @neelEstimationEffectivePopulation2013 say:\n\n> Our results show that the LD method provides a good approximation of the NS as long as the scale of sampling is commensurate with the scale of local breeding.\n\nTreating the whole dataset as one population yields $N_e$ of -27423.9 (in other words too large) at pcrit of 0.02. But the problem is determining the size of the genetic neighborhood, because Fauvelot et al.'s samples were not as regularly spaced as D'Aloia's. \n\n\nGoing to use the LD method as most recently discussed by @waplesLinkageDisequilibriumEstimates2010, and implemented in NeEstimator v2 [@doNeEstimatorV2Reimplementation2014]. I'm going to remove alleles following Waples and Do's rule of thumb. Parameter settings are in `\"Daruanus/Ne_estimator/\"` Best to run this from the command line actually. I am having it calculate $N_b$ (number of breeders) for monogamy, as the protogynous mating system of *Dascyllus aruanus* seems closer to monogamy than random mating.  Also had to edit the table output of NeEstimator to make it legible to R because it had lots of spaces and empty cells ðŸ‘Ž\n\nHere's the parameter file for LDNe\n\n::: {.cell}\n\n```{.bash .cell-code  code-fold=\"true\"}\n/Applications/NeEstimator/Ne2-1M i:/Users/eric/github/IBD_Kernels/Daruanus/NeEstimator/info o:/Users/eric/github/IBD_Kernels/Daruanus/NeEstimator/option\n\nINFO\n1   * A number = sum of method(s) to run: LD(=1), Het(=2), Coan(=4), Temporal(=8).\n/Users/eric/github/IBD_Kernels/Daruanus/  * Input Directory\nDaruanus_All_8locus.txt * Input file name\n2    * 1 = FSTAT format, 2 = GENEPOP format\n/Users/eric/github/IBD_Kernels/Daruanus/NeEstimator/  * Output Directory\nDaruanus_LDNe.txt  * Output file name (put asterisk adjacent to the name to append)\n6    * Number of critical values, added 1 if a run by rejecting only singleton alleles is included\n1 0.01 0.02 0.03 0.04 0.05    * Critical values, a special value '1' is for rejecting only singleton alleles\n1   * 0: Random mating, 1: Monogamy (LD method)\n\n\nOPTION\n1  1  5  1  * First number = sum of method(s) to have extra output: LD(=1), Het(=2), Coan(=4), Temporal(=8)\n0  * Maximum individuals/pop. If 0: no limit\n0  * First entry n1 = 0: No Freq output. If n1 = -1: Freq. output up to population 50. Two entries n1, n2 with n1 <= n2: Freq output for populations from n1 to n2. Max. populations to have Freq output is set at 50\n0  * For Burrow output file (up to 50 populations can have output). See remark below\n1  * Parameter CI: 1 for Yes, 0 for No\n1  * Jackknife CI: 1 for Yes, 0 for No\n0  * Up to population, or range of populations to run (if 2 entries). If first entry = 0: no restriction\n0  * All loci are accepted\n1  * Enter 1: A file is created to document missing data if there are any in input file. Enter 0: no file created\n0   * Line for chromosomes/loci option and file\n\n```\n:::\n\n\n\nI implemented a filtering step that follows @waplesLinkageDisequilibriumEstimates2010 :\n\n> For S \\> 100: choose Pcrit = 0.01\n> For S \\> 25: choose Pcrit = 0.02.\\\n> For S \\< 25: choose so that 1/(2S) \\< Pcrit \\< 1/S.\n\n\nAnd I am only keeping estimates from samples with n >= 10.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNe_estimates <- read_NeEstimator(file = \"./NeEstimator/Daruanus_LDNe_xLD.txt\")\n\n# filtering based on rule of thumb from Waples & Do\nNe_estimates_f <- WDFilter(Ne_estimates, 10) %>% \n  mutate(Population = str_replace(Population,pattern = \"\\\\d+\\\\:(\\\\w+)_[\\\\w-]+\", \n                                  replacement = \"\\\\1\" ))\n\nNe_estimates_f\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Population\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"SampSize\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pcrit\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"WeightedMean\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"IndAlleles\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"r2\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"ExpR2\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Ne\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"ParametricLow\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"ParametricHigh\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"JackknifeLow\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"JackknifeHigh\"],\"name\":[12],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"EffDF\"],\"name\":[13],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Go\",\"2\":\"55\",\"3\":\"0.02\",\"4\":\"55.0\",\"5\":\"4331\",\"6\":\"0.018751\",\"7\":\"0.019236\",\"8\":\"-1377.4\",\"9\":\"2013.9\",\"10\":\"NA\",\"11\":\"1282.0\",\"12\":\"NA\",\"13\":\"2900\"},{\"1\":\"Hie\",\"2\":\"47\",\"3\":\"0.02\",\"4\":\"47.0\",\"5\":\"7358\",\"6\":\"0.022882\",\"7\":\"0.022721\",\"8\":\"4137.0\",\"9\":\"722.9\",\"10\":\"NA\",\"11\":\"606.1\",\"12\":\"NA\",\"13\":\"4898\"},{\"1\":\"Lar\",\"2\":\"51\",\"3\":\"0.02\",\"4\":\"51.0\",\"5\":\"3484\",\"6\":\"0.020885\",\"7\":\"0.020834\",\"8\":\"13190.4\",\"9\":\"622.0\",\"10\":\"NA\",\"11\":\"480.6\",\"12\":\"NA\",\"13\":\"2083\"},{\"1\":\"Lion\",\"2\":\"49\",\"3\":\"0.02\",\"4\":\"49.0\",\"5\":\"6502\",\"6\":\"0.021510\",\"7\":\"0.021737\",\"8\":\"-2941.3\",\"9\":\"1250.1\",\"10\":\"NA\",\"11\":\"954.9\",\"12\":\"NA\",\"13\":\"4445\"},{\"1\":\"Manu\",\"2\":\"14\",\"3\":\"0.04\",\"4\":\"14.0\",\"5\":\"1005\",\"6\":\"0.089004\",\"7\":\"0.089239\",\"8\":\"-2636.6\",\"9\":\"74.2\",\"10\":\"NA\",\"11\":\"63.4\",\"12\":\"NA\",\"13\":\"763\"},{\"1\":\"Mara\",\"2\":\"52\",\"3\":\"0.02\",\"4\":\"52.0\",\"5\":\"4081\",\"6\":\"0.020336\",\"7\":\"0.020411\",\"8\":\"-8977.0\",\"9\":\"793.1\",\"10\":\"NA\",\"11\":\"553.8\",\"12\":\"NA\",\"13\":\"2151\"},{\"1\":\"Mata\",\"2\":\"48\",\"3\":\"0.02\",\"4\":\"48.0\",\"5\":\"4191\",\"6\":\"0.021966\",\"7\":\"0.022218\",\"8\":\"-2652.5\",\"9\":\"923.0\",\"10\":\"NA\",\"11\":\"634.0\",\"12\":\"NA\",\"13\":\"2397\"},{\"1\":\"MBO\",\"2\":\"50\",\"3\":\"0.02\",\"4\":\"50.0\",\"5\":\"8333\",\"6\":\"0.021633\",\"7\":\"0.021276\",\"8\":\"1863.7\",\"9\":\"644.9\",\"10\":\"NA\",\"11\":\"455.8\",\"12\":\"NA\",\"13\":\"3220\"},{\"1\":\"Mo\",\"2\":\"264\",\"3\":\"0.01\",\"4\":\"264.0\",\"5\":\"4260\",\"6\":\"0.003764\",\"7\":\"0.003834\",\"8\":\"-9543.0\",\"9\":\"6998.6\",\"10\":\"NA\",\"11\":\"3618.6\",\"12\":\"NA\",\"13\":\"1862\"},{\"1\":\"Muaiv\",\"2\":\"54\",\"3\":\"0.02\",\"4\":\"54.0\",\"5\":\"2752\",\"6\":\"0.019327\",\"7\":\"0.019612\",\"8\":\"-2340.3\",\"9\":\"854.1\",\"10\":\"NA\",\"11\":\"349.2\",\"12\":\"NA\",\"13\":\"710\"},{\"1\":\"Nadi\",\"2\":\"51\",\"3\":\"0.02\",\"4\":\"50.5\",\"5\":\"2608\",\"6\":\"0.021235\",\"7\":\"0.021033\",\"8\":\"3305.3\",\"9\":\"472.5\",\"10\":\"NA\",\"11\":\"328.5\",\"12\":\"NA\",\"13\":\"1195\"},{\"1\":\"Puna\",\"2\":\"25\",\"3\":\"0.02\",\"4\":\"25.0\",\"5\":\"3421\",\"6\":\"0.045698\",\"7\":\"0.045184\",\"8\":\"1199.8\",\"9\":\"221.8\",\"10\":\"NA\",\"11\":\"166.1\",\"12\":\"NA\",\"13\":\"1778\"},{\"1\":\"QBW\",\"2\":\"54\",\"3\":\"0.02\",\"4\":\"53.7\",\"5\":\"4489\",\"6\":\"0.024834\",\"7\":\"0.019734\",\"8\":\"128.0\",\"9\":\"105.5\",\"10\":\"159.7\",\"11\":\"68.7\",\"12\":\"381.7\",\"13\":\"336\"},{\"1\":\"Rangi\",\"2\":\"43\",\"3\":\"0.02\",\"4\":\"43.0\",\"5\":\"2845\",\"6\":\"0.025128\",\"7\":\"0.024981\",\"8\":\"4541.9\",\"9\":\"440.1\",\"10\":\"NA\",\"11\":\"297.9\",\"12\":\"NA\",\"13\":\"1275\"},{\"1\":\"Suva\",\"2\":\"56\",\"3\":\"0.02\",\"4\":\"56.0\",\"5\":\"2222\",\"6\":\"0.019452\",\"7\":\"0.018874\",\"8\":\"1150.6\",\"9\":\"373.0\",\"10\":\"NA\",\"11\":\"291.1\",\"12\":\"NA\",\"13\":\"1153\"},{\"1\":\"Taga\",\"2\":\"52\",\"3\":\"0.02\",\"4\":\"52.0\",\"5\":\"2346\",\"6\":\"0.020192\",\"7\":\"0.020411\",\"8\":\"-3057.6\",\"9\":\"671.3\",\"10\":\"NA\",\"11\":\"383.8\",\"12\":\"NA\",\"13\":\"953\"},{\"1\":\"Tahaa\",\"2\":\"36\",\"3\":\"0.02\",\"4\":\"36.0\",\"5\":\"2525\",\"6\":\"0.032537\",\"7\":\"0.030239\",\"8\":\"287.4\",\"9\":\"157.1\",\"10\":\"1156.0\",\"11\":\"127.8\",\"12\":\"NA\",\"13\":\"1169\"},{\"1\":\"Taka\",\"2\":\"30\",\"3\":\"0.02\",\"4\":\"29.8\",\"5\":\"1585\",\"6\":\"0.038172\",\"7\":\"0.037159\",\"8\":\"607.9\",\"9\":\"159.8\",\"10\":\"NA\",\"11\":\"137.7\",\"12\":\"NA\",\"13\":\"1098\"},{\"1\":\"Tave\",\"2\":\"50\",\"3\":\"0.02\",\"4\":\"50.0\",\"5\":\"3464\",\"6\":\"0.022223\",\"7\":\"0.021276\",\"8\":\"701.1\",\"9\":\"325.3\",\"10\":\"NA\",\"11\":\"293.8\",\"12\":\"NA\",\"13\":\"2443\"},{\"1\":\"Tem\",\"2\":\"64\",\"3\":\"0.02\",\"4\":\"64.0\",\"5\":\"2593\",\"6\":\"0.016139\",\"7\":\"0.016404\",\"8\":\"-2518.0\",\"9\":\"1021.7\",\"10\":\"NA\",\"11\":\"770.0\",\"12\":\"NA\",\"13\":\"1742\"},{\"1\":\"Ten\",\"2\":\"52\",\"3\":\"0.02\",\"4\":\"52.0\",\"5\":\"3724\",\"6\":\"0.020779\",\"7\":\"0.020411\",\"8\":\"1805.7\",\"9\":\"492.7\",\"10\":\"NA\",\"11\":\"382.7\",\"12\":\"NA\",\"13\":\"1971\"},{\"1\":\"Tetia\",\"2\":\"52\",\"3\":\"0.02\",\"4\":\"52.0\",\"5\":\"2208\",\"6\":\"0.021145\",\"7\":\"0.020411\",\"8\":\"905.4\",\"9\":\"324.2\",\"10\":\"NA\",\"11\":\"262.5\",\"12\":\"NA\",\"13\":\"1225\"},{\"1\":\"Tote\",\"2\":\"53\",\"3\":\"0.02\",\"4\":\"53.0\",\"5\":\"3833\",\"6\":\"0.020282\",\"7\":\"0.020004\",\"8\":\"2395.4\",\"9\":\"544.8\",\"10\":\"NA\",\"11\":\"409.5\",\"12\":\"NA\",\"13\":\"1940\"},{\"1\":\"Yanu\",\"2\":\"47\",\"3\":\"0.02\",\"4\":\"47.0\",\"5\":\"3459\",\"6\":\"0.022957\",\"7\":\"0.022721\",\"8\":\"2822.5\",\"9\":\"488.4\",\"10\":\"NA\",\"11\":\"426.0\",\"12\":\"NA\",\"13\":\"2532\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\n### Interpreting LD Effective Size\n\nThese estimates are true Ne estimates because these samples were taken across the age structure of the population. So there won't be any conversion from Nb to Ne.\n\nCecile says:\n\n> For Fiji and NC, multiple individuals at a coral colony were indeed sampled as we used clove oil around coral colonies covered by a plastic bag... so yes too, across age structure. I do not have the size of individuals sampled\n\n@waplesEffectsOverlappingGenerations2014 say:\n\n>Our empirical results provide some qualified support for the hypothesis (Waples and Do 2010) that a sample that includes as many cohorts as there are in a generation should produce an estimate approximately equal to Ne....All estimates based on random samples of adults were smaller than true Ne ..., but there was a tendency for the bias to be less when the number of cohorts included in the adult sample corresponded more closely to the generation length.\n\n*Dascyllus aruanus* strikes me as one of those species where you'll have as many cohorts as generations, although protogyny kind of messes with this. In any case, we can expect our estimates of Ne (and thus De) to be downwardly biased, and therefore our estimates of $\\sigma$ to be upwardly biased, by hopefully less than 10%?\n\n# New Caledonia\n\n## Traditional Isolation by Distance Method\n\nBased on the OG [@roussetGeneticDifferentiationEstimation1997] estimator from slope of the IBD regression.\n\n### Calculate distance matrices\n\n#### Genetic Distances\n\nWeir and Cockerham's Fst and other basic stats\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nDaruanus.NC.hfst <- genind2hierfstat(Daruanus.NC)\nDaruanus.NC.loci <- genind2loci(Daruanus.NC)\n#gen.loci <- genind2loci(gen)\nstats.NC <- basic.stats(Daruanus.NC)\ntheta.NC <- theta.msat(Daruanus.NC.loci)\n#mean theta\nmean(theta.NC[,2])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 156.622\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nfst.NC <- genet.dist(Daruanus.NC.hfst, method = \"WC84\")\n# mean Fis values\nstats.NC$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Mara\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Ten\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"MBO\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Lar\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Go\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"QBW\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tote\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.0146\",\"2\":\"0.0300625\",\"3\":\"0.0232\",\"4\":\"0.0067125\",\"5\":\"0.0191\",\"6\":\"0.0227625\",\"7\":\"0.003\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nmeanFis <- stats.NC$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE)) %>%\n                summarize(meanFis = rowMeans(.))\n# linearize\nfst.NC <- fst.NC/(1-fst.NC)\n```\n:::\n\n\n#### Geographic Distances\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n#calculate great circle distance\ngcdists_NC <- as.dist(pointDistance(NCpops[,5:4], lonlat=T)/1000)\nattr(gcdists_NC, \"Labels\") <- NCpops$Abbr\ngcdists.mat_NC <- as.matrix(gcdists_NC)\n#write.csv(as.matrix(gen.fst), \"Daruanus_linearizedFst.csv\", row.names = F, quote=F)\n#write.csv(as.matrix(gcdists), \"Daruanus_gcdists.csv\", row.names = F, quote=F)\n\n#pull out a few other distances we'll need\nneighbordists_NC <- gcdists.mat_NC[row(gcdists.mat_NC) == col(gcdists.mat_NC) + 1]\ndistfromP1_NC <- gcdists.mat_NC[,1]\nmaxdist_NC <- max(gcdists.mat_NC)\nmeandists_NC <- mean(neighbordists_NC)\n```\n:::\n\n\n\n\n\n\n### Calculate linear model\n\nFirst to get the slope $m$ we need to make a simple linear model. I don't think significance is really important here, but we can calculate that with a Mantel test.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# mantel test\nmantelt <- mantel.randtest(fst.NC,gcdists_NC, nrepet = 10000)\n\ndistances <- tibble(distance=as.vector(gcdists_NC),fst=as.vector(fst.NC))\n\nlmodel_NC <- lm(fst ~ distance , distances)\n\nslope_NC <- round(lmodel_NC$coefficients[2],7)\nmantelr <- round(mantelt$obs, 2)\npvalue <- round(mantelt$pvalue, 5)\n\nlmodel_plot_NC <- ggplot(distances,aes(x=distance,y=fst)) +\n              geom_point() + \n                          geom_smooth(method=lm) + \n                          xlab(\"Geographic Distance (km)\") + \n             ylab(expression(F[\"ST\"]/1-F[\"ST\"])) + \n             geom_text(label = paste(\"m =\", slope_NC, \n                          \"; Mantel r =\", mantelr,\n                         \", p =\", pvalue ), \n                  mapping = aes(x = 80, y = -0.002))\n\nlmodel_plot_NC\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n#ggsave(\"NC_IBD.pdf\", plot=clown_plot,device=\"pdf\", width=7, height=5,units=\"in\")\n```\n:::\n\n\nYowza. Negative slope! As Cecile had already measured. But the Fst values are really teeny, and there's a lot of error in their measurement.\n\n### Calculate Effective Size\n\nTake the harmonic mean of the Ne across all pops\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNe_estimates_NC <- Ne_estimates_f %>% filter(Population %in% NCpops$Abbr)\n\n#write_csv(Nb_estimates_f,\"NeEstimator/Nb_estimates_recruits_NeTable.csv\")\nNe_estimates_NC[,c(1:4,8,11,12)]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Population\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"SampSize\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pcrit\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"WeightedMean\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Ne\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"JackknifeLow\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"JackknifeHigh\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Go\",\"2\":\"55\",\"3\":\"0.02\",\"4\":\"55.0\",\"5\":\"-1377.4\",\"6\":\"1282.0\",\"7\":\"NA\"},{\"1\":\"Lar\",\"2\":\"51\",\"3\":\"0.02\",\"4\":\"51.0\",\"5\":\"13190.4\",\"6\":\"480.6\",\"7\":\"NA\"},{\"1\":\"Mara\",\"2\":\"52\",\"3\":\"0.02\",\"4\":\"52.0\",\"5\":\"-8977.0\",\"6\":\"553.8\",\"7\":\"NA\"},{\"1\":\"MBO\",\"2\":\"50\",\"3\":\"0.02\",\"4\":\"50.0\",\"5\":\"1863.7\",\"6\":\"455.8\",\"7\":\"NA\"},{\"1\":\"QBW\",\"2\":\"54\",\"3\":\"0.02\",\"4\":\"53.7\",\"5\":\"128.0\",\"6\":\"68.7\",\"7\":\"381.7\"},{\"1\":\"Ten\",\"2\":\"52\",\"3\":\"0.02\",\"4\":\"52.0\",\"5\":\"1805.7\",\"6\":\"382.7\",\"7\":\"NA\"},{\"1\":\"Tote\",\"2\":\"53\",\"3\":\"0.02\",\"4\":\"53.0\",\"5\":\"2395.4\",\"6\":\"409.5\",\"7\":\"NA\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# harmonic mean of Nb, following Waples and Do 2010\nNe_hm_NC <- harm_mean(Ne_estimates_NC$Ne)\n```\n:::\n\n\n### Ne vs. Sampling Window\n\nLet's cluster the sites by UPGMA\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust(gcdists_NC,\"average\"))\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nLet's explore Ne and  $F_{is}$ when lumping populations...  Lump populations that are 10, 20, 40, 100 and 200 km apart.\n\n::: {.panel-tabset}\n\n#### 10km\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstats.NC$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Mara\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Ten\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"MBO\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Lar\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Go\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"QBW\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tote\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.0146\",\"2\":\"0.0300625\",\"3\":\"0.0232\",\"4\":\"0.0067125\",\"5\":\"0.0191\",\"6\":\"0.0227625\",\"7\":\"0.003\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nDaruanus.NC.10km <- Daruanus.NC\n\nDaruanus.NC.10km@pop <-  Daruanus.NC.10km@pop %>% \n    fct_collapse(\n   center = c(\"Go\",\"Lar\")\n        )\n\nDaruanus.NC.10km.stats <- basic.stats(Daruanus.NC.10km)\n\nDaruanus.NC.10km.stats$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Mara\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Ten\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"MBO\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"center\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"QBW\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tote\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.0146\",\"2\":\"0.0300625\",\"3\":\"0.0232\",\"4\":\"0.012425\",\"5\":\"0.0227625\",\"6\":\"0.003\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmeanFis_NC_10km <- Daruanus.NC.10km.stats$Fis %>% as_tibble() %>%\n                    summarize(across(everything(),mean, na.rm=TRUE)) %>% \n                  summarize(meanFis = rowMeans(.))\n\n#genind_to_genepop(Daruanus.NC.10km,output = \"Daruanus/NC/Daruanus_NC_10km.txt\")\n\nNe_estimates_NC10km <- read_NeEstimator(\"NeEstimator/Daruanus_LDNe_NC_10kmxLD.txt\")\nNe_estimates_NC10km <- WDFilter(Ne_estimates_NC10km, 10)\n\n\nNe_hm_NC10km <- harm_mean(Ne_estimates_NC10km$Ne)\n\nNe_hm_NC10km\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 638.502\n```\n:::\n:::\n\n\n#### 20km \n\n\n::: {.cell}\n\n```{.r .cell-code}\nDaruanus.NC.20km <- Daruanus.NC\n\nDaruanus.NC.20km@pop <-  Daruanus.NC.20km@pop %>% fct_collapse(\n   center = c(\"MBO\",\"Lar\",\"Go\",\"QBW\") )\n\nDaruanus.NC.20km.stats <- basic.stats(Daruanus.NC.20km)\n\nDaruanus.NC.20km.stats$Fis %>% as_tibble() %>% \n              summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Mara\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Ten\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"center\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tote\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.0146\",\"2\":\"0.0300625\",\"3\":\"0.0181875\",\"4\":\"0.003\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmeanFis_NC_20km <- Daruanus.NC.20km.stats$Fis %>% as_tibble() %>%\n                  summarize(across(everything(),mean, na.rm=TRUE)) %>% \n                    summarize(meanFis = rowMeans(.))\n\n#genind_to_genepop(Daruanus.NC.20km,output = \"NC/Daruanus_NC_20km.txt\")\n\nNe_estimates_NC20km <- read_NeEstimator(file = \"NeEstimator/Daruanus_LDNe_NC_20kmxLD.txt\")\nNe_estimates_NC20km <- WDFilter(Ne_estimates_NC20km, 10)\n\nNe_hm_NC20km <- harm_mean(Ne_estimates_NC20km$Ne)\n\nNe_hm_NC20km\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3062.967\n```\n:::\n:::\n\n\n#### 40km \n\n\n::: {.cell}\n\n```{.r .cell-code}\nDaruanus.NC.40km <- Daruanus.NC\n\nDaruanus.NC.40km@pop <-  Daruanus.NC.40km@pop %>% fct_collapse(\n   north = c(\"Mara\",\"Ten\"),\n   center = c(\"MBO\",\"Lar\",\"Go\",\"QBW\") )\n\nDaruanus.NC.40km.stats <- basic.stats(Daruanus.NC.40km)\n\nDaruanus.NC.40km.stats$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"north\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"center\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tote\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.0211875\",\"2\":\"0.0181875\",\"3\":\"0.003\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmeanFis_NC_40km <- Daruanus.NC.40km.stats$Fis %>% as_tibble() %>%\n  summarize(across(everything(),mean, na.rm=TRUE)) %>% summarize(meanFis = rowMeans(.))\n\n#genind_to_genepop(Daruanus.NC.40km,output = \"NC/Daruanus_NC_40km.txt\")\n\nNe_estimates_NC40km <- read_NeEstimator(file = \"NeEstimator/Daruanus_LDNe_NC_40kmxLD.txt\")\nNe_estimates_NC40km <- WDFilter(Ne_estimates_NC40km, 10)\n\nNe_hm_NC40km <- harm_mean(Ne_estimates_NC40km$Ne)\n\n\nNe_hm_NC40km\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2373.392\n```\n:::\n:::\n\n\n#### 100km\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDaruanus.NC.100km <- Daruanus.NC\n\nDaruanus.NC.100km@pop <-  Daruanus.NC.100km@pop %>% fct_collapse(\n  north = c(\"Mara\"),\n  east = c(\"MBO\",\"Lar\",\"Go\",\"QBW\",\"Tote\",\"Ten\") )\n\nDaruanus.NC.100km.stats <- basic.stats(Daruanus.NC.100km)\n\nDaruanus.NC.100km.stats$Fis %>% as_tibble() %>% \n                    summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"north\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"east\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.0146\",\"2\":\"0.0174875\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmeanFis_NC_100km <- Daruanus.NC.100km.stats$Fis %>% as_tibble() %>%\n  summarize(across(everything(),mean, na.rm=TRUE)) %>% \n    summarize(meanFis = rowMeans(.))\n\n\n\n#genind_to_genepop(Daruanus.NC.100km,output = \"NC/Daruanus_NC_100km.txt\")\n\nNe_estimates_NC100km <- read_NeEstimator(file =\n                                           \"NeEstimator/Daruanus_LDNe_NC_100kmxLD.txt\")\nNe_estimates_NC100km <- WDFilter(Ne_estimates_NC100km, 10)\n\n#replace one very large estimate of Ne with 20,0000\nNe_estimates_NC100km$Ne[1] <- 20000\n\nNe_hm_NC100km <- harm_mean(Ne_estimates_NC100km$Ne)\n\n\nNe_hm_NC100km\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12268.54\n```\n:::\n:::\n\n\n#### 200km (all pops as one)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNe_estimates_NC200km <- read_NeEstimator(file =\n                                    \"NeEstimator/Daruanus_LDNe_NC_1popxLD.txt\")\nNe_estimates_NC200km <- WDFilter(Ne_estimates_NC200km, 10)\n\n\n\nNe_hm_NC200km <- Ne_estimates_NC200km$Ne\nNe_all_NC <- Ne_estimates_NC200km$Ne\n\nNe_all_NC_CI <- c(Ne_estimates_NC200km$ParametricLow,\n                  Ne_estimates_NC200km$ParametricHigh)\n\nNe_all_NC\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6294.9\n```\n:::\n:::\n\n\n#### Figure\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNCwindows <- tibble(SampleWindow = c(0,10,20,40,100,200),\n             hm_Ne = c(Ne_hm_NC,Ne_hm_NC10km,Ne_hm_NC20km,Ne_hm_NC40km,\n                                Ne_hm_NC100km,Ne_hm_NC200km))\n\nggplot(NCwindows, aes(x = SampleWindow, y = hm_Ne)) + geom_point() + geom_line() +\n  ylim(0,20000) + xlim(0,300)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(\"NC_Ne_v_SampDistance.pdf\",height = 7, width = 7)\n```\n:::\n\n\n:::\n\n### Calculate Effective Density\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Divide by mean distance between sampling sites to get density\nDe_NC <- Ne_hm_NC/meandists_NC\nDe_all_NC <- Ne_all_NC / maxdist_NC\n```\n:::\n\n\nMean density is 32.6102505 individuals/km, or if we do the whole sample as a single population 41.9068643 individuals/km\n\n## MigraiNe Method\n\n\n\n### Running MigraiNe\n\nI modified the genepop file by adding sampling coordinates as the name of the last individual in each population. These coordinates were distances in km along a the mostly linear SW coastline of New Caledonia, which runs a total of ~612km. It is ~418km to the first population at Mara, so I am adding that value to the coordinates in the file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistfromP1_NC+418\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Mara      Ten      MBO      Lar       Go      QBW     Tote \n418.0000 454.7026 494.1474 507.2045 514.9837 527.4177 568.2117 \n```\n:::\n:::\n\n\n::: {.panel-tabset}\n\n#### First Run\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../Daruanus_NC.txt\nDemographicModel=LinearIBD\n# I modified the genepop file by adding sampling coordinates as the name of the \n# last individual in each population. These coordinates were distances in km along \n# a the mostly linear SW coastline of New Caledonia, \n# which runs a total of ~612km. It is ~418km to the first population at Mara, \n# so I am adding that value to the coordinates in the file.\nPSONMax=612 0\n#Neighborhood size is based on mean distance between populations = 25.08\n#612/25.08 = 24.40 so I will use 25 bins\nGeoBinNbr=25\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs. GivenK is number of alleles\n# at each locus\nMutationModel=PIM\nGivenK=26,35,11,57,47,32,30,23,57,34,44\nsamplingSpace=,,\nsamplingScale=,,\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,0\nUpperbound=1,2500,1\noneDimCI= 2Nmu, 2Nm, Nb, condS2\nCoreNbrForR=4\n#Plots= all1DProfiles\n1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\n#writeAdHocFiles=T\n```\n:::\n\n\n#### Second Run\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../Daruanus_NC.txt\nDemographicModel=LinearIBD\n# I modified the genepop file by adding sampling coordinates as the name of the \n# last individual in each population. These coordinates were distances in km along \n# a the mostly linear SW coastline of New Caledonia, \n# which runs a total of ~612km. It is ~418km to the first population at Mara, \n# so I am adding that value to the coordinates in the file.\nPSONMin=0 0\nPSONMax=612 0\n#Neighborhood size is based on mean distance between populations = 25.08\n#612/25.08 = 24.40 so I will use 26 bins\nGeoBinNbr=26\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs\nMutationModel=PIM\nGivenK=26,35,11,57,47,32,30,23,57,34,44\nsamplingSpace=,,\nsamplingScale=,,\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,0\nUpperbound=2,10000,1\noneDimCI= 2Nmu, 2Nm, Nb, condS2\nCoreNbrForR=4\n#Plots= all1DProfiles\n1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\n#writeAdHocFiles=T\n```\n:::\n\n\nThis finished in 250 minutes, and had very similar results to the first run\n\n#### Third Run\n\nAfter removing 3 loci\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../../Daruanus_NC.txt\nDemographicModel=LinearIBD\n# I modified the genepop file by adding sampling coordinates as the name of the \n# last individual in each population. These coordinates were distances in km along \n# a the mostly linear SW coastline of New Caledonia, \n# which runs a total of ~612km. It is ~418km to the first population at Mara, \n# so I am adding that value to the coordinates in the file.\nPSONMin=0 0\nPSONMax=612 0\n#Neighborhood size is based on mean distance between populations = 25.08\n#612/25.08 = 24.40 so I will use 25 bins\nGeoBinNbr=25\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs\nMutationModel=PIM\nGivenK=26,11,57,32,30,23,57,44\nsamplingSpace=,,\nsamplingScale=,,\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,0\nUpperbound=2,10000,1\noneDimCI= 2Nmu, 2Nm, Nb, condS2\nCoreNbrForR=4\nPlots= all1DProfiles\n#1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\n#writeAdHocFiles=T\n```\n:::\n\n\n#### Fourth Run\n\nAnd, lo, I forgot to use the condS2 parameterization that is recommended for weak IBD signals by @lebloisMigraiNeManual2020! \n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../../Daruanus_NC.txt\nDemographicModel=LinearIBD\n# I modified the genepop file by adding sampling coordinates as the name of the \n# last individual in each population. These coordinates were distances in km along \n# a the mostly linear SW coastline of New Caledonia, \n# which runs a total of ~612km. It is ~418km to the first population at Mara, \n# so I am adding that value to the coordinates in the file.\nPSONMin=0 0\nPSONMax=612 0\n#Neighborhood size is based on mean distance between populations = 25.08\n#612/25.08 = 24.40 so I will use 25 bins\nGeoBinNbr=25\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs\nMutationModel=PIM\nGivenK=26,11,57,32,30,23,57,44\n#sampling - this performs uniform sampling of ln(sigma^2), which is the quantity we are interested in\nsamplingSpace=,,condS2\nsamplingScale=,,logscale\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,1\nUpperbound=2,10000,100000\noneDimCI= 2Nmu, 2Nm, Nb, condS2\nCoreNbrForR=4\nPlots= all1DProfiles\n#1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\n#writeAdHocFiles=T\n\n```\n:::\n\n\nFinishing in 171.6 minutes\n\n#### Seventh Run\n\nBrought in the priors a little. Didn't change the results much.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../../Daruanus_NC.txt\nDemographicModel=LinearIBD\n# I modified the genepop file by adding sampling coordinates as the name of the \n# last individual in each population. These coordinates were distances in km along \n# a the mostly linear SW coastline of New Caledonia, \n# which runs a total of ~612km. It is ~418km to the first population at Mara, \n# so I am adding that value to the coordinates in the file.\nPSONMin=0 0\nPSONMax=612 0\n#Neighborhood size is based on mean distance between populations = 25.08\n#612/25.08 = 24.40 so I will use 26 bins\nGeoBinNbr=26\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs\nMutationModel=PIM\nGivenK=26,11,57,32,30,23,57,44\n#sampling - this performs uniform sampling of ln(sigma^2)\nsamplingSpace=,,condS2\nsamplingScale=,,logscale\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and conds2\nLowerBound=0.1,1,1\nUpperbound=2,6000,10000\noneDimCI= 2Nmu, 2Nm, Nb, condS2, g\n#oneDimCI= All\nCoreNbrForR=4\nPlots= all1DProfiles\n#1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\nwriteAdHocFiles=T\n```\n:::\n\nFinished in 187.55 minutes.\n\n:::\n\n### Create Dispersal Kernels\n\n#### Sigma estimates\n\nSo we have two routes to estimate $\\sigma$ here. \n\n#### From Neighborhood Size\n\n$$\n\\sigma = \\sqrt\\frac{NS}{4D_e}\n$$\n\n\n\n#### From Sigma^2\n\nAfter converting it from lattice units to km\n\n$$\n\\sigma = \\sqrt{\\sigma^2}\n$$\n\nThis got me the following estimates.\n\nOutput from run 7.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nrunDir <- \"./NC/Migraine/run7\"\n#runDir <- \"/Users/edc5240/github/IBD_Kernels/Daruanus/NC/Migraine/run7\"\nresult <- read_migraine(runDir)\nNS_NC <- result[\"NS\"]\nNSCI_NC <- c(result[\"NSCI1\"],result[\"NSCI2\"])\nNmu_NC <- result[\"Nmu\"]\nNm_NC <- result[\"Nm\"]\ng_NC <- result[\"g\"]\nlattice2geog_NC <- result[\"lattice2geog\"]\n\nsigma2_NC <- g_to_sigma2(g_NC)\nsigma_fromsigma2_NC <- sqrt(sigma2_NC*lattice2geog_NC)\nsigma_fromNS_NC <- sqrt(NS_NC/(4*De_NC))\nsigmaCI_fromNS_NC <- sqrt(NSCI_NC/(4*De_NC))\n\nsigma_fromNS_all_NC <- sqrt(NS_NC/(4*De_all_NC))\nsigmaCI_fromNS_all_NC <- sqrt(NSCI_NC/(4*De_all_NC))\n```\n:::\n\n\nThe $\\sigma$ we get  from Neighborhood Size $\\sigma$ is 227. We get a much lower estimate from $\\sigma^2$, with $\\sigma$ = 1750\n\n### Confidence Intervals\n\nPropagating error sorta following Pinsky et al. table S2\n\n#### Error in Effective Size\n\nFollowing @pinskyUsingIsolationDistance2010 I am going to bootstrap across the confidence intervals for each Nb estimate. Unfortunately, the new jackknife method of @jonesImprovedConfidenceIntervals2016 often results in infinite upper bounds with marine data (but then, so does the parametric method). I'm also going to use a uniform distribution for the error because approximating the error structure with ChiSq or Normal distributions is not a simple task and I'm just trying to get a sketch of the error to compare with MigraiNe anyway. I'm going to set \"Infinite\" values in the upper CI to 20,000 since I rarely see upper bounds that high.\n\n::: {.panel-tabset}\n\n##### For Harmonic Mean Method\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNe_estimates_NC$JackknifeHigh[which(is.na(Ne_estimates_NC$JackknifeHigh))] <- 20000\nNe_estimates_NC$JackknifeHigh <- as.numeric(Ne_estimates_NC$JackknifeHigh)\nNe_estimates_NC$JackknifeLow <- as.numeric(Ne_estimates_NC$JackknifeLow)\n\n# couldn't get purrr:map to do this, so resorted to mapply to set upper and lower bounds\nNe_error_NC <- NULL\nfor(n in 1:100000){\n  hm <- harm_mean(mapply(runif, n=1, \n                   min=Ne_estimates_NC$JackknifeLow,\n                   max=Ne_estimates_NC$JackknifeHigh))\n  Ne_error_NC <- c(Ne_error_NC,hm)\n}\nnames(Ne_error_NC)<-NULL\n#write.csv(Ne_error_NC, \"NC/Ne_error_NC.csv\",quote=F,row.names = F)\nggplot(data = tibble(Ne_error_NC), aes(x=Ne_error_NC)) + geom_density()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n##### For Whole Sample Method\n\n@naaykensIsolationDistanceGenetic2022 showed that using the whole sample to estimate density gives pretty similar results to the harmonic mean method, so I'm also going to try that. \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNbl95 <- Ne_all_NC_CI[1]\nNbu95 <- Ne_all_NC_CI[2]\nNb <- Ne_all_NC\nr2_NC <- Ne_estimates_NC200km$r2\ner2_NC <- 1/Ne_estimates_NC200km$SampSize + 3.19/Ne_estimates_NC200km$SampSize ^2 #from Waples 2006 table 2\ndf_NC <- Ne_estimates_NC200km$IndAlleles\n\n\nWaplesMonoNe(r2p(r2_NC,er2_NC))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6140.55\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# this shows that we can get approximately what NeEstimator gives us... not sure why its not exact... must be missing some correction\nrCI_NC <- df_NC*r2_NC / (qchisq(c(0.025,0.975), df = df_NC))\nWaplesMonoNe(rCI_NC - er2_NC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  3729.688 16288.111\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n#and now to get and plot the error distribution\nNe_error_all_NC <- WaplesMonoNe(((df_NC*r2_NC)/(rchisq(10000, df = df_NC))) - er2_NC)\n\nggplot(data = tibble(Ne_error_all_NC), aes(x=Ne_error_all_NC)) + geom_density() + xlim(0,20000)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n:::\n\n#### Error in Effective Density\n\nOne issue with this analysis is that, while @neelEstimationEffectivePopulation2013 make a good case that we are estimating the Ne of the local neighborhood, we don't actually know what the size of the neighborhood is. Indeed, that's actually what we are trying to estimate. [@pinskyUsingIsolationDistance2010] used neighborhoods that were 1/2 the distance to the next neighborhood on either side of the sampling site, while [@pinskyMarineDispersalScales2017] didn't even attempt this and just used the Ne of the whole sampled population, and divided by the length of the whole sampled area.\n\nThis is another area of uncertainty, so we should model the uncertainty in neighborhood length. We know its between 10 and 40 km based on the Ne vs. Sampling Window analysis above...\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNe_error_NC <- read_csv(file = \"NC/Ne_error_NC.csv\")$x %>% as.vector\nDe_error_NC <- Ne_error_NC/ rnorm(100000,mean=meandists_NC,sd = 15/1.96)\n\nDe_error_all_NC <- Ne_error_all_NC / maxdist_NC\n\nggplot(data = tibble(De_error_all_NC), aes(x=De_error_all_NC)) + geom_density() + xlim(0,250)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(data = tibble(De_error_NC), aes(x=De_error_NC)) + geom_density() + xlim(0,250)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-31-2.png){width=672}\n:::\n:::\n\n\n#### Error in Neighborhood Size\n\nUsing a uniform distribution is out because there is clearly a peaked distribution in the Migraine output. So I am using a quick fit to a truncated lognormal distribution.\n\n![Migraine_Run2_Neighborhood_Theta](figures/Da_NC_Neighborhood.jpg)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNSCI_NC\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     NSCI1      NSCI2 \n9.8516e+04 1.0000e+12 \n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ncurve(dlnorm(x, meanlog = log(NS_NC), sdlog = log(2.75e5)))\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nqlnorm(c(0.025,0.975),meanlog = log(NS_NC), sdlog = log(2.75e5))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.464785e-04 3.073026e+17\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNeighborhood_error_NC <- rlnormTrunc(n = 100000, meanlog = log(NS_NC), \n                                     sdlog = log(2.75e5), min = NSCI_NC[1], max = NSCI_NC[2])\n\nggplot(data = tibble(Neighborhood_error_NC), aes(x=Neighborhood_error_NC)) + \n  geom_density() + scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nsigma_error_fromNS_NC <- sqrt(Neighborhood_error_NC/(4*De_error_NC))\nnames(sigma_error_fromNS_NC) <- NULL\n\nsigma_error_fromNS_all_NC <- sqrt(Neighborhood_error_NC/(4*De_error_all_NC))\nnames(sigma_error_fromNS_all_NC) <- NULL\n\nggplot(data = tibble(sigma_error_fromNS_NC), \n       aes(x=sigma_error_fromNS_NC)) +\n  geom_density() + scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-33-2.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(data = tibble(sigma_error_fromNS_all_NC), \n       aes(x=sigma_error_fromNS_all_NC)) +\n  geom_density() + scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-33-3.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nquantile(sigma_error_fromNS_NC, c(0.025, 0.975),na.rm=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       2.5%       97.5% \n   25.81684 55124.68339 \n```\n:::\n:::\n\n\n#### Plot Dispersal Kernels \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nkernelplot_NC <- ggplot(data.frame(x=c(0,500)),aes(x)) + \n  map(.x = sample(sigma_error_fromNS_NC,1000), .f = function(sigma){\n                         stat_function(fun = dexp, \n                         args = list(rate = 1/sigma),\n                         colour = \"lightblue\",                                  linetype=1,linewidth=0.1,alpha = 0.2) }) +\n  stat_function(fun=dexp,args=list(rate = 1/sigma_fromsigma2_NC), linetype=2,\n             aes(color=\"Migraine_Sigma2\"), show.legend = T) +\n  stat_function(fun=dexp,args=list(rate = 1/sigma_fromNS_NC), linetype=2,\n          aes(color=\"Migraine_Neighborhood_Size\"), show.legend = T) +\n  stat_function(fun=dexp,args=list(rate = 1/sigma_fromNS_all_NC), linetype=2,\n       aes(color=\"Migraine_Neighborhood_Size_OnePop\"), show.legend = T) +\n  xlab(\"Alongshore Distance (km)\") + \n    ylab(\"Dispersal probability density\") +\n  scale_color_manual(\"Kernel\",values = \n           c(Migraine_Sigma2=\"darkblue\", \n             Migraine_Neighborhood_Size =\"blue\",\n             Migraine_Neighborhood_Size_OnePop = \"darkcyan\")) + \n                        ylim(0,0.01) \n\nkernelplot_NC\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n# Fiji\n\n## Traditional Isolation by Distance Method\n\nBased on the OG [@roussetGeneticDifferentiationEstimation1997] estimator from slope of the IBD regression.\n\n### Calculate distance matrices\n\n#### Genetic Distances\n\nWeir and Cockerham's Fst and other basic stats.  \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nDaruanus.Fiji.hfst <- genind2hierfstat(Daruanus.Fiji)\nDaruanus.Fiji.loci <- genind2loci(Daruanus.Fiji)\n#gen.loci <- genind2loci(gen)\nstats.Fiji <- basic.stats(Daruanus.Fiji)\ntheta.Fiji <- theta.msat(Daruanus.Fiji.loci)\n#mean theta\nmean(theta.Fiji[,2])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 61.06467\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nfst.Fiji <- genet.dist(Daruanus.Fiji.hfst, method = \"WC84\")\n# mean Fis values\nstats.Fiji$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Suva\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Muaiv\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Yanu\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Taga\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Nadi\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Mata\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tave\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"-0.01635\",\"2\":\"0.0421\",\"3\":\"0.019275\",\"4\":\"-0.0143375\",\"5\":\"0.032325\",\"6\":\"-0.0137875\",\"7\":\"0.00805\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# linearize\nfst.Fiji <- fst.Fiji/(1-fst.Fiji)\n```\n:::\n\n\n##### Geographic Distances\n\nAlso, given the circular nature of Viti Levu, the Euclidean distances measured with `pointDistance()` are going to be short. So I measured distances between each neighboring locality along the reef in Google Earth, as given in `fijidistances`\n\nThis code creates a kml file for import into Google Earth. \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nfijipops.sp<-fijipops[c(1,2,3,5,4)]\ncoordinates(fijipops.sp) <- c(\"decimalLongitude\",\"decimalLatitude\")\nproj4string(fijipops.sp) <- CRS(\"+proj=longlat +datum=WGS84\")\n#writeOGR(fijipops.sp, dsn=\"Fiji/fijipops.kml\", layer = \"Daruanus samples\", driver = \"KML\")\n```\n:::\n\n\nI used these points to measure distances in Google Earth. The total sampled length from Ovalu in the east to the Yasawas in the northwest was a total of ~414km.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n#calculate great circle distance\ngcdists_Fiji <- as.dist(pointDistance(fijipops.sp, lonlat=T)/1000)\nattr(gcdists_Fiji, \"Labels\") <- fijipops$Abbr\ngcdists.mat_Fiji <- as.matrix(gcdists_Fiji)\n#write.csv(as.matrix(gen.fst_Fiji), \"Daruanus_linearizedFst.csv\", row.names = F, quote=F)\n#write.csv(as.matrix(gcdists_Fiji), \"Daruanus_gcdists.csv\", row.names = F, quote=F)\n\n#pull out a few other distances we'll need\nneighbordists_Fiji <- gcdists.mat_Fiji[row(gcdists.mat_Fiji) == col(gcdists.mat_Fiji) + 1]\n#distfromP1 <- gcdists.mat[,1]\n\n#meandists <- mean(neighbordists)\nfijidistances <- c((106.03-98.16), (155.22-106.03), (188.58-155.22), (273.50-188.58),\n                   (370-273.50), (378.13-370.0))\n\nmeandists_Fiji <- mean(fijidistances)\nmaxdist_Fiji <- 378.13-98.16\n\nfijidistances\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  7.87 49.19 33.36 84.92 96.50  8.13\n```\n:::\n:::\n\n\nThis gives us a mean sampling distance of 46.6616667\n\n\n\n\n\n### Calculate linear model\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# mantel test\nmantelt<-mantel.randtest(fst.Fiji,gcdists_Fiji, nrepet = 10000)\n\ndistances <- tibble(distance=as.vector(gcdists_Fiji),fst=as.vector(fst.Fiji))\n\nlmodel_Fiji <- lm(fst ~ distance , distances)\n\nslope_Fiji <- lmodel_Fiji$coefficients[2]\nmantelr <- round(mantelt$obs, 2)\npvalue <- round(mantelt$pvalue, 5)\n\nlmodel_plot_Fiji <- ggplot(distances,aes(x=distance,y=fst)) +\n                geom_point() + geom_smooth(method=lm) + \n                                xlab(\"Geographic Distance (km)\") + \n                ylab(expression(F[\"ST\"]/1-F[\"ST\"])) + \n                geom_text(label = paste(\"m =\", round(slope_Fiji,8),\n                            \"; Mantel r =\", mantelr,\n                            \", p =\", pvalue ), \n                        mapping = aes(x = 80, y = -0.002))\n\nlmodel_plot_Fiji\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n#ggsave(\"Fiji_IBD.pdf\", plot=lmodel_plot,device=\"pdf\", width=7, height=5,units=\"in\")\n```\n:::\n\n\nAnd after removing the 3 wonky loci, the slope is very slightly positive!\n\n### Calculate Effective Size\n\nPull out just the relevant Fiji estimates of Ne. The negative numbers reflect very high values of Ne!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNe_estimates_Fiji <- Ne_estimates_f %>% filter(Population %in% fijipops$Abbr)\n\n#\nNe_estimates_Fiji[,c(1:4,8,11,12)]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Population\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"SampSize\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pcrit\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"WeightedMean\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Ne\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"JackknifeLow\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"JackknifeHigh\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Mata\",\"2\":\"48\",\"3\":\"0.02\",\"4\":\"48.0\",\"5\":\"-2652.5\",\"6\":\"634.0\",\"7\":\"NA\"},{\"1\":\"Muaiv\",\"2\":\"54\",\"3\":\"0.02\",\"4\":\"54.0\",\"5\":\"-2340.3\",\"6\":\"349.2\",\"7\":\"NA\"},{\"1\":\"Nadi\",\"2\":\"51\",\"3\":\"0.02\",\"4\":\"50.5\",\"5\":\"3305.3\",\"6\":\"328.5\",\"7\":\"NA\"},{\"1\":\"Suva\",\"2\":\"56\",\"3\":\"0.02\",\"4\":\"56.0\",\"5\":\"1150.6\",\"6\":\"291.1\",\"7\":\"NA\"},{\"1\":\"Taga\",\"2\":\"52\",\"3\":\"0.02\",\"4\":\"52.0\",\"5\":\"-3057.6\",\"6\":\"383.8\",\"7\":\"NA\"},{\"1\":\"Tave\",\"2\":\"50\",\"3\":\"0.02\",\"4\":\"50.0\",\"5\":\"701.1\",\"6\":\"293.8\",\"7\":\"NA\"},{\"1\":\"Yanu\",\"2\":\"47\",\"3\":\"0.02\",\"4\":\"47.0\",\"5\":\"2822.5\",\"6\":\"426.0\",\"7\":\"NA\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# harmonic mean of Ne, following Waples and Do 2010\nNe_hm_Fiji <- harm_mean(Ne_estimates_Fiji$Ne)\n```\n:::\n\n\n\n### Ne vs. Sampling Window\n\nLet's cluster the sites by UPGMA (using Euclidean distances)\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust(gcdists_Fiji,\"average\"))\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n::: {.panel-tabset}\n\n#### 10km\n\nLet's explore Ne and $F_{is}$ when lumping populations...  First lump populations that are less than 10 km apart\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstats.Fiji$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Suva\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Muaiv\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Yanu\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Taga\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Nadi\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Mata\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tave\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"-0.01635\",\"2\":\"0.0421\",\"3\":\"0.019275\",\"4\":\"-0.0143375\",\"5\":\"0.032325\",\"6\":\"-0.0137875\",\"7\":\"0.00805\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nDaruanus.Fiji.10km <- Daruanus.Fiji\n\nDaruanus.Fiji.10km@pop <-  Daruanus.Fiji.10km@pop %>% fct_collapse(\n   east = c(\"Suva\",\"Muaiv\"),\n   west = c(\"Mata\",\"Tave\")\n )\n\nDaruanus.Fiji.10km.stats <- basic.stats(Daruanus.Fiji.10km)\n\nDaruanus.Fiji.10km.stats$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"east\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Yanu\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Taga\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Nadi\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"west\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.013475\",\"2\":\"0.019275\",\"3\":\"-0.0143375\",\"4\":\"0.032325\",\"5\":\"-0.0025875\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n#genind_to_genepop(Daruanus.Fiji.10km,output = \"Daruanus/Fiji/Daruanus_Fiji_10km.txt\")\n\nNe_estimates_Fiji10km <- read_NeEstimator(\n                        \"NeEstimator/Daruanus_LDNe_Fiji_10kmxLD.txt\")\nNe_estimates_Fiji10km <- WDFilter(Ne_estimates_Fiji10km, 10)\n\n\nNe_hm_Fiji10km <- harm_mean(Ne_estimates_Fiji10km$Ne)\nNe_hm_Fiji10km\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6700.065\n```\n:::\n:::\n\n\n#### 40km \n\n\n::: {.cell}\n\n```{.r .cell-code}\nDaruanus.Fiji.40km <- Daruanus.Fiji\n\nDaruanus.Fiji.40km@pop <-  Daruanus.Fiji.10km@pop %>% fct_collapse(\n   east = c(\"Suva\",\"Muaiv\"),\n   center = c(\"Yanu\",\"Taga\"),\n   west = c(\"Mata\",\"Tave\")\n )\n\nDaruanus.Fiji.40km.stats <- basic.stats(Daruanus.Fiji.40km)\n\nDaruanus.Fiji.40km.stats$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"east\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"center\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Nadi\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"west\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.013475\",\"2\":\"-0.00065\",\"3\":\"0.032325\",\"4\":\"-0.0025875\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n#genind_to_genepop(Daruanus.Fiji.40km,output = \"Daruanus/Fiji/Daruanus_Fiji_40km.txt\")\n\nNe_estimates_Fiji40km <- read_NeEstimator(file = \"NeEstimator/Daruanus_LDNe_Fiji_40kmxLD.txt\")\nNe_estimates_Fiji40km <- WDFilter(Ne_estimates_Fiji40km, 10)\n\nNe_hm_Fiji40km <- harm_mean(Ne_estimates_Fiji40km$Ne)\n\nNe_hm_Fiji40km\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4601.126\n```\n:::\n:::\n\n\n#### 100km\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDaruanus.Fiji.100km <- Daruanus.Fiji\n\nDaruanus.Fiji.100km@pop <-  Daruanus.Fiji.100km@pop %>% fct_collapse(\n   east = c(\"Suva\",\"Muaiv\",\"Yanu\",\"Taga\"),\n   west = c(\"Mata\",\"Tave\",\"Nadi\")\n )\n\nDaruanus.Fiji.100km.stats <- basic.stats(Daruanus.Fiji.100km)\n\nDaruanus.Fiji.100km.stats$Fis %>% as_tibble() %>% summarize(across(everything(),\n                                                                   mean, \n                                                                   na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"east\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"west\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.00815\",\"2\":\"0.0100375\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n#genind_to_genepop(Daruanus.Fiji.100km,output = \"Fiji/Daruanus_Fiji_100km.txt\")\n\nNe_estimates_Fiji100km <- read_NeEstimator(file =\n                                             \"NeEstimator/Daruanus_LDNe_Fiji_100kmxLD.txt\")\nNe_estimates_Fiji100km <- WDFilter(Ne_estimates_Fiji100km, 10)\n\nNe_hm_Fiji100km <- harm_mean(Ne_estimates_Fiji100km$Ne)\n\nNe_hm_Fiji100km\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5822.584\n```\n:::\n:::\n\n\n#### 300km (all pops as one)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNe_estimates_Fiji300km <- read_NeEstimator(file =\n                                             \"NeEstimator/Daruanus_LDNe_Fiji_1popxLD.txt\")\nNe_estimates_Fiji300km <- WDFilter(Ne_estimates_Fiji300km, 10)\n\n\n\nNe_hm_Fiji300km <- 20000\nNe_all_Fiji <- Ne_estimates_Fiji300km$Ne\n\nNe_all_Fiji_CI <- c(Ne_estimates_Fiji300km$ParametricLow,\n                    Ne_estimates_Fiji300km$ParametricHigh)\n\nNe_all_Fiji\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -207211.8\n```\n:::\n\n```{.r .cell-code}\nNe_all_Fiji_CI\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6613.9     NA\n```\n:::\n:::\n\n\n#### Figure\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfijiwindows <- tibble(SampleWindow = c(0,10,40,100,300),\n                      hm_Ne =\n                        c(Ne_hm_Fiji,Ne_hm_Fiji10km,Ne_hm_Fiji40km,\n                          Ne_hm_Fiji100km,Ne_hm_Fiji300km))\n\nggplot(fijiwindows, aes(x = SampleWindow, y = hm_Ne)) + geom_point() + \n  geom_line() + ylim(0,20000) + xlim(0,300)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(\"Fiji_Ne_v_SampDistance.pdf\",height = 7, width = 7)\n```\n:::\n\n\n:::\n\n### Calculate Effective Density\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Divide by mean distance between sampling sites to get density\nDe_Fiji <- Ne_hm_Fiji/meandists_Fiji\n#De_all_Fiji <- Ne_all_Fiji / maxdist_Fiji\n```\n:::\n\n\nMean density is 82.3843306 individuals/km. If we do the whole sample as a single population, Ne is \"infinite\" so this isn't useful.\n \n### Calculate sigma\n\nFollowing Rousset's [-@roussetGeneticDifferentiationEstimation1997] equation:\n\n$$\n\\frac{1}{m} = 4D_e\\sigma^2\n$$\n\nWhich [@pinskyMarineDispersalScales2017] re-arranged to give:\n\n$$\n\\sigma = \\sqrt{\\frac{1}{4D_em}}\n$$\n\nSo now let's plug that into the first equation!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma_fromSlope_Fiji <- sqrt(1 / (4*De_Fiji*slope_Fiji))\n\n#sigma_fromSlope_all_Fiji <- sqrt(1 / (4*De_all_Fiji*slope_Fiji))\n```\n:::\n\n\n $\\sigma$ estimated from this slope is 63.67 km if I use the harmonic mean Ne for density. I can't use the Ne from the whole population because it is infinite.\n\n\n\n## MigraiNe Method\n\n\n### Running MigraiNe\n\n::: {.panel-tabset}\n\n#### First Run\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../Daruanus_Fiji.txt\nDemographicModel= LinearIBD\n#I modified the genepop file by adding sampling coordinates as the name of the \n#last individual in each population. These coordinates were distances in km \n#along the Viti Levu reef and coastline from Ovalu in the east to the Yasawas \n#in the northwest: a total of ~414km. I measured all distances in Google Earth\nPSONMax=414 0\n#Neighborhood size is based on mean distance between populations = 46.66\n#414/46.66 = 8.87 so I will use 10 bins\nGeoBinNbr=10\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs. GivenK is number of alleles\n# at each locus (Daruanus.Fiji@loc.n.all)\nMutationModel=PIM\nGivenK=22,27,8,46,47,30,24,20,52,31,38\nsamplingSpace=,,\nsamplingScale=,,\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,0\nUpperbound=1,2500,1\noneDimCI= 2Nmu, 2Nm, Nb, condS2\nCoreNbrForR=4\n#Plots= all1DProfiles\n1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\n#writeAdHocFiles=T\n```\n:::\n\n\nThis run completed in 147 minutes\n\n#### Second Run\n\nA second run where I widen the prior on theta and Nm.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../Daruanus_Fiji.txt\nDemographicModel=LinearIBD\n#I modified the genepop file by adding sampling coordinates as the name of the \n#last individual in each population. These coordinates were distances in km \n#along the Viti Levu reef and coastline from Ovalu in the east to the Yasawas \n#in the northwest: a total of ~414km. I measured all distances in Google Earth\nPSONMax=414 0\n#Neighborhood size is based on mean distance between populations = 46.66\n#414/46.66 = 8.87 so I will use 10 bins\nGeoBinNbr=10\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs. GivenK is number of alleles\n# at each locus (Daruanus.Fiji@loc.n.all)\nMutationModel=PIM\nGivenK=22,27,8,46,47,30,24,20,52,31,38\nsamplingSpace=,,\nsamplingScale=,,\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,0\nUpperbound=1,2500,1\noneDimCI= 2Nmu, 2Nm, Nb, condS2\nCoreNbrForR=4\n#Plots= all1DProfiles\n1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\n#writeAdHocFiles=T\n```\n:::\n\n\nThis result finished in the same amount of time and with very similar results to the first!\n\n#### Third Run\n\nRemoving 3 loci and using the condS2 search parameterization\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../../Daruanus_Fiji.txt\nDemographicModel=LinearIBD\n#I modified the genepop file by adding sampling coordinates as the name of the \n#last individual in each population. These coordinates were distances in km \n#along the Viti Levu reef and coastline from Ovalu in the east to the Yasawas \n#in the northwest: a total of ~414km. I measured all distances in Google Earth\nPSONMax=414 0\n#Neighborhood size is based on mean distance between populations = 46.66\n#414/46.66 = 8.87 so I will use 10 bins\nGeoBinNbr=10\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs. GivenK is number of alleles\n# at each locus (Daruanus.Fiji@loc.n.all)\nMutationModel=PIM\nGivenK=22,8,46,30,24,20,52,38\nsamplingSpace=,,condS2\nsamplingScale=,,logscale\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,1\nUpperbound=2,10000,100000\noneDimCI= 2Nmu, 2Nm, Nb, condS2\nCoreNbrForR=4\n#Plots= all1DProfiles\n1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\nwriteAdHocFiles=T\n```\n:::\n\n\nFinished in 112.9333333 minutes.\n\n:::\n\n### Create Dispersal Kernels\n\nThis got me the following estimates. \n\nOutput from run 2.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nrunDir <- \"./Fiji/Migraine/run3\"\nresult <- read_migraine(runDir)\n  \nNS_Fiji <- result[\"NS\"]\nNSCI_Fiji <- c(result[\"NSCI1\"],result[\"NSCI2\"])\nNmu_Fiji <- result[\"Nmu\"]\nNm_Fiji <- result[\"Nm\"]\ng_Fiji <- result[\"g\"]\nlattice2geog_Fiji <- result[\"lattice2geog\"]\n\nsigma2_Fiji <- g_to_sigma2(g_Fiji)\nsigma_fromsigma2_Fiji <- sqrt(sigma2_Fiji*lattice2geog_Fiji)\nsigma_fromNS_Fiji <- sqrt(NS_Fiji/(4*De_Fiji))\nsigmaCI_fromNS_Fiji <- sqrt(NSCI_Fiji/(4*De_Fiji))\n```\n:::\n\n\nThe $\\sigma$ we get  from Neighborhood Size $\\sigma$ is 31.2. We get a much lower estimate from $\\sigma^2$, with $\\sigma$ = 5.92\n\n### Confidence Intervals\n\nPropagating error sorta following Pinsky et al. table S2\n\n#### Error in Effective Size\n\n::: {.panel-tabset}\n\n##### For Harmonic Mean Method\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNe_estimates_Fiji$JackknifeHigh[which(is.na(Ne_estimates_Fiji$JackknifeHigh))] <- 20000\nNe_estimates_Fiji$JackknifeHigh <- as.numeric(Ne_estimates_Fiji$JackknifeHigh)\nNe_estimates_Fiji$JackknifeLow <- as.numeric(Ne_estimates_Fiji$JackknifeLow)\n\nNe_error_Fiji <- NULL\nfor(n in 1:100000){\n  hm <- harm_mean(mapply(runif, n=1, \n                   min=Ne_estimates_Fiji$JackknifeLow,\n                   max=Ne_estimates_Fiji$JackknifeHigh))\n  Ne_error_Fiji <- c(Ne_error_Fiji,hm)\n}\nnames(Ne_error_Fiji)<-NULL\n#Ne_error_NC <- read_csv(file = \"NC/Ne_error_NC.csv\")$x %>% as.vector\n\nggplot(data = tibble(Ne_error_Fiji), aes(x=Ne_error_Fiji)) + geom_density()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n\n##### For Whole Sample Method\n\nCan't do the whole sample method, because Ne estimate is \"infinite\"\n\n:::\n\n#### Error in Effective Density\n\nWill model the error in `meandist` as well...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNe_error_Fiji <- read_csv(file = \"Fiji/Ne_error_Fiji.csv\")$x %>% as.vector\nDe_error_Fiji <- Ne_error_Fiji/ rnormTrunc(100000,mean=meandists_Fiji,\n              sd = meandists_Fiji/1.96, min = 1e-10)\n```\n:::\n\n\n#### Error in Slope\n\n\n::: {.cell}\n\n```{.r .cell-code}\nslope_se_Fiji <- summary(lmodel_Fiji)$coefficients[2,2]\n\nggplot(data = tibble(x = c(0,1e-5)), aes(x=x)) + stat_function(fun=dnormTrunc, args = list(mean = slope_Fiji, sd=slope_se_Fiji, min = 0))\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n\n```{.r .cell-code}\nslope_error_Fiji <- rnormTrunc(100000, mean = slope_Fiji, sd = slope_se_Fiji,min = 1e-10)\n\nggplot(data = tibble(slope_error_Fiji), aes(x=slope_error_Fiji)) + geom_density()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-54-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsigma_error_fromSlope_Fiji <- sqrt(1 / (4*De_error_Fiji*slope_error_Fiji))\n\nggplot(data = tibble(sigma_error_fromSlope_Fiji), aes(x=sigma_error_fromSlope_Fiji)) +\n  geom_density() + xlim(0,1000)  + scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-54-3.png){width=672}\n:::\n\n```{.r .cell-code}\nquantile(sigma_error_fromSlope_Fiji, c(0.025, 0.975))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     2.5%     97.5% \n 5.821038 90.862403 \n```\n:::\n:::\n\n\n#### Error in Neighborhood Size\n\nUsing a uniform distribution is out because there is clearly a peaked distribution in the Migraine output. So I am using a quick fit to a lognormal distribution\n\n![Migraine_Run2_Neighborhood_Theta](figures/Da_Fiji_Neighborhood.jpg)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNSCI_Fiji\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    NSCI1     NSCI2 \n   122779 101654085 \n```\n:::\n\n```{.r .cell-code}\nqlnorm(c(0.025,0.975),meanlog = log(NS_Fiji), sdlog = log(18.89))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.010201e+03 1.016589e+08\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNeighborhood_error_Fiji <- rlnormTrunc(n = 100000, meanlog = log(NS_Fiji), \n          sdlog = log(18.89), min = NSCI_Fiji[1], max = NSCI_Fiji[2])\n\nggplot(data = tibble(Neighborhood_error_Fiji), aes(x=Neighborhood_error_Fiji)) + \n  geom_density() + scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-56-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsigma_error_fromNS_Fiji <- sqrt(Neighborhood_error_Fiji/(4*De_error_Fiji))\n\nnames(sigma_error_fromNS_Fiji) <- NULL\n\nggplot(data = tibble(sigma_error_fromNS_Fiji), \n       aes(x=sigma_error_fromNS_Fiji)) +\n       geom_density() + scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-56-2.png){width=672}\n:::\n:::\n\n\n#### Plot Dispersal Kernels \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkernelplot_Fiji <- ggplot(data.frame(x=c(0,100)),aes(x)) +\n  map(.x = sample(sigma_error_fromNS_Fiji,1000), .f = function(sigma){\n            stat_function(fun = dexp, args = list(rate = 1/sigma),\n                   colour = \"lightblue\",\n                   linetype=1,size=0.1,alpha = 0.2) }) +\n  map(.x = sample(sigma_error_fromSlope_Fiji,1000), .f = function(sigma){\n         stat_function(fun = dexp, args = list(rate = 1/sigma),\n                     colour = \"lightgreen\",\n                    linetype=1,size=0.1,alpha = 0.2) }) +\n                stat_function(fun=dexp,args=list(rate = 1/sigma_fromSlope_Fiji), \n                              linetype=2,aes(color=\"IBD_Slope\"),show.legend = T) +\n                stat_function(fun=dexp,args=list(rate = 1/sigma_fromsigma2_Fiji), \n                              linetype=2,aes(color=\"Migraine_Sigma2\"), \n                              show.legend = T) +\n                stat_function(fun=dexp,args=list(rate = 1/sigma_fromNS_Fiji), \n                              linetype=2,aes(color=\"Migraine_Neighborhood_Size\"), \n                              show.legend = T) + \n                                xlab(\"Alongshore Distance (km)\") +\n                                ylab(\"Dispersal probability density\") +\n                              scale_color_manual(\"Kernel\",values = \n                    c(Migraine_Sigma2=\"darkblue\", \n                    Migraine_Neighborhood_Size =\"blue\",\n                    IBD_Slope = \"green\")) + ylim(0,0.05)\n\n\nkernelplot_Fiji\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\n\nThe reason that the error is generally smaller than the estimate is because the upper bounds of Ne are often unbounded, and treated as 20,000.\n\n# Society Islands\n\n## Traditional Isolation by Distance Method\n\nBased on the OG [@roussetGeneticDifferentiationEstimation1997] estimator from slope of the IBD regression.\n\n### Calculate distance matrices\n\n#### Genetic Distances\n\nWeir and Cockerham's Fst and other basic stats.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nDaruanus.FP.hfst <- genind2hierfstat(Daruanus.FP)\nDaruanus.FP.loci <- genind2loci(Daruanus.FP)\n#gen.loci <- genind2loci(gen)\nstats.FP <- basic.stats(Daruanus.FP)\ntheta.FP <- theta.msat(Daruanus.FP.loci)\n#mean theta\nmean(theta.FP[,2])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 53.37003\n```\n:::\n\n```{.r .cell-code}\nfst.FP <- genet.dist(Daruanus.FP.hfst, method = \"WC84\")\n# mean Fis values\nstats.FP$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Puna\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tem\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Mo\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tetia\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tahaa\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.00615\",\"2\":\"0.0063125\",\"3\":\"-0.001225\",\"4\":\"0.028625\",\"5\":\"0.0123375\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# linearize\nfst.FP <- fst.FP/(1-fst.FP)\n#write.csv(as.matrix(fst.FP), \"Daruanus_FP_linearizedFst.csv\", row.names = F, quote=F)\n```\n:::\n\n\n##### Geographic Distances\n\nCalculate great circle distance\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngcdists_FP <- as.dist(pointDistance(FPpops[,c(5,4)], lonlat=T)/1000)\nattr(gcdists_FP, \"Labels\") <- FPpops$Abbr\ngcdists.mat_FP <- as.matrix(gcdists_FP)\n```\n:::\n\n\nNow to follow what Malin did, and create a principal components axis, and measure distance along it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# because we only care about the x axis, we need to reorder,so that Tetiaroa comes after Puna and before Temae\nFPpops <- FPpops[c(1,4,2,3,5),]\nFPpops.sp <- SpatialPointsDataFrame(FPpops[,c(5,4)], data = FPpops, \n               proj4string = CRS(\"+proj=longlat  +datum=WGS84\"))\nFPpops.utm <- spTransform(FPpops.sp, CRS(\"+proj=utm +zone=56 +datum=WGS84\"))\n#as.dist(pointDistance(localities.utm,latlon=F)/1000)\n#principal components without scaling or centering, we just want the rotation\npc_FP <- prcomp(FPpops.utm@coords, retx=T, scale=F,center=F)\nplot(pc_FP$x)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#set PC2 axis to zero\npc1_FP<-cbind(pc_FP$x[,1],0)\n\n\npcdists_FP <- as.dist(pointDistance(pc1_FP,lonlat=F)/1000)\n\nattr(pcdists_FP, \"Labels\") <- FPpops$Abbr\n#write.csv(as.matrix(pcdists), \"Apercula_pcdists.csv\", row.names = T, quote=F)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npcdists.mat_FP <- as.matrix(pcdists_FP)\n\n#pull out a few other distances we'll need\nneighbordists_FP <- pcdists.mat_FP[row(pcdists.mat_FP) == col(pcdists.mat_FP) + 1]\ndistfromP1_FP <- pcdists.mat_FP[,1]\nmaxdist_FP <- max(pcdists.mat_FP)\nmeandists_FP <- mean(neighbordists_FP)\n```\n:::\n\n\nMean sampling distance is 86.1473678 km. But note that Tetiaroa occurs only a couple of kilometers from the Moorea population because they are being forced onto the rotated X axis.\n\n\n\n\n### Calculate linear model\n\nFirst to get the slope $m$ we need to make a simple linear model. I don't think significance is really important here, but we can calculate that with a Mantel test.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mantel test\nmantelt<-mantel.randtest(fst.FP,pcdists_FP, nrepet = 10000)\n\ndistances <- tibble(distance=as.vector(pcdists_FP),fst=as.vector(fst.FP))\n\nlmodel_FP <- lm(fst ~ distance , distances)\n\nslope_FP <- lmodel_FP$coefficients[2]\nmantelr <- round(mantelt$obs, 2)\npvalue <- round(mantelt$pvalue, 5)\n\nlmodel_plot_FP <- ggplot(distances,aes(x=distance,y=fst)) +\n          geom_point() + geom_smooth(method=lm) + \n                    xlab(\"Geographic Distance (km)\") + \n          ylab(expression(F[\"ST\"]/1-F[\"ST\"])) + \n          geom_text(label = paste(\"m =\", slope_FP, \"; Mantel r =\", \n                                  mantelr,\", p =\", pvalue ), \n                       mapping = aes(x = 80, y = -0.002))\n\nlmodel_plot_FP\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-62-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(\"FP_IBD.pdf\", plot=lmodel_plot,device=\"pdf\", width=7, height=5,units=\"in\")\n```\n:::\n\n\nE voila, c'est positive! But not significantly so.\n\n\n### Calculate Effective Size\n\nPull out just the relevant FP estimates of Ne. The negative numbers reflect very high values of Ne!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNe_estimates_FP <- Ne_estimates_f %>% filter(Population %in% FPpops$Abbr)\n\nNe_estimates_FP[,c(1:4,8,11,12)]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Population\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"SampSize\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pcrit\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"WeightedMean\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Ne\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"JackknifeLow\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"JackknifeHigh\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Mo\",\"2\":\"264\",\"3\":\"0.01\",\"4\":\"264\",\"5\":\"-9543.0\",\"6\":\"3618.6\",\"7\":\"NA\"},{\"1\":\"Puna\",\"2\":\"25\",\"3\":\"0.02\",\"4\":\"25\",\"5\":\"1199.8\",\"6\":\"166.1\",\"7\":\"NA\"},{\"1\":\"Tahaa\",\"2\":\"36\",\"3\":\"0.02\",\"4\":\"36\",\"5\":\"287.4\",\"6\":\"127.8\",\"7\":\"NA\"},{\"1\":\"Tem\",\"2\":\"64\",\"3\":\"0.02\",\"4\":\"64\",\"5\":\"-2518.0\",\"6\":\"770.0\",\"7\":\"NA\"},{\"1\":\"Tetia\",\"2\":\"52\",\"3\":\"0.02\",\"4\":\"52\",\"5\":\"905.4\",\"6\":\"262.5\",\"7\":\"NA\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# harmonic mean of Ne, following Waples and Do 2010\nNe_hm_FP <- harm_mean(Ne_estimates_FP$Ne)\n```\n:::\n\n\n### Ne vs. Sampling Window\n\nLet's cluster the sites by UPGMA (using Euclidean distances)\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust(pcdists_FP,\"average\"))\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n\n::: {.panel-tabset}\n\n#### 10km\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstats.FP$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Puna\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tem\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Mo\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tetia\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tahaa\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.00615\",\"2\":\"0.0063125\",\"3\":\"-0.001225\",\"4\":\"0.028625\",\"5\":\"0.0123375\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmeanFis_FP <- stats.FP$Fis %>% as_tibble() %>%\n  summarize(across(everything(),mean, na.rm=TRUE)) %>% summarize(meanFis = rowMeans(.))\n\nDaruanus.FP.10km <- Daruanus.FP\n\nDaruanus.FP.10km@pop <-  Daruanus.FP.10km@pop %>% fct_collapse(\n   TemTetia = c(\"Tetia\",\"Tem\")\n )\n\nDaruanus.FP.10km.stats <- basic.stats(Daruanus.FP.10km)\n\nDaruanus.FP.10km.stats$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Puna\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"TemTetia\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Mo\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tahaa\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.00615\",\"2\":\"0.016375\",\"3\":\"-0.001225\",\"4\":\"0.0123375\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmeanFis_FP_10km <- Daruanus.FP.10km.stats$Fis %>% as_tibble() %>%\n  summarize(across(everything(),mean, na.rm=TRUE)) %>% summarize(meanFis = rowMeans(.))\n\n#genind_to_genepop(Daruanus.FP.10km,output = \"Daruanus/FP/Daruanus_FP_10km.txt\")\n\nNe_estimates_FP10km <- read_NeEstimator(\n                        \"NeEstimator/Daruanus_LDNe_FP_10kmxLD.txt\")\n\nNe_estimates_FP10km <- WDFilter(Ne_estimates_FP10km, 10)\n\n\nNe_hm_FP10km <- harm_mean(Ne_estimates_FP10km$Ne)\n```\n:::\n\n\n#### 20km \n\n\n::: {.cell}\n\n```{.r .cell-code}\nDaruanus.FP.20km <- Daruanus.FP\n\nDaruanus.FP.20km@pop <-  Daruanus.FP.20km@pop %>% fct_collapse(\n   TemTetiaMo = c(\"Tetia\",\"Tem\",\"Mo\")\n )\n\nDaruanus.FP.20km.stats <- basic.stats(Daruanus.FP.20km)\n\nDaruanus.FP.20km.stats$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Puna\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"TemTetiaMo\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tahaa\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.00615\",\"2\":\"0.0047\",\"3\":\"0.0123375\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmeanFis_FP_20km <- Daruanus.FP.20km.stats$Fis %>% as_tibble() %>%\n  summarize(across(everything(),mean, na.rm=TRUE)) %>% summarize(meanFis = rowMeans(.))\n\n#genind_to_genepop(Daruanus.FP.20km,output = \"Daruanus/FP/Daruanus_FP_20km.txt\")\n\nNe_estimates_FP20km <- read_NeEstimator(file = \"NeEstimator/Daruanus_LDNe_FP_20kmxLD.txt\")\nNe_estimates_FP20km <- WDFilter(Ne_estimates_FP20km, 10)\n\nNe_hm_FP20km <- harm_mean(Ne_estimates_FP20km$Ne)\n```\n:::\n\n\n#### 40km \n\n\n::: {.cell}\n\n```{.r .cell-code}\nDaruanus.FP.40km <- Daruanus.FP\n\nDaruanus.FP.40km@pop <-  Daruanus.FP.40km@pop %>% fct_collapse(\n   East = c(\"Tetia\",\"Tem\",\"Mo\",\"Puna\")\n )\n\nDaruanus.FP.40km.stats <- basic.stats(Daruanus.FP.40km)\n\nDaruanus.FP.40km.stats$Fis %>% as_tibble() %>% summarize(across(everything(),mean, na.rm=TRUE))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"East\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Tahaa\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.004825\",\"2\":\"0.0123375\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmeanFis_FP_40km <- Daruanus.FP.40km.stats$Fis %>% as_tibble() %>%\n  summarize(across(everything(),mean, na.rm=TRUE)) %>% summarize(meanFis = rowMeans(.))\n\n#genind_to_genepop(Daruanus.FP.40km,output = \"Daruanus/FP/Daruanus_FP_40km.txt\")\n\nNe_estimates_FP40km <- read_NeEstimator(file = \"NeEstimator/Daruanus_LDNe_FP_40kmxLD.txt\")\nNe_estimates_FP40km <- WDFilter(Ne_estimates_FP40km, 10)\n\nNe_hm_FP40km <- harm_mean(Ne_estimates_FP40km$Ne)\n```\n:::\n\n\n#### 300km (all pops as one)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNe_estimates_FP300km <- read_NeEstimator(file =\n                                             \"NeEstimator/Daruanus_LDNe_FP_1popxLD.txt\")\nNe_estimates_FP300km <- WDFilter(Ne_estimates_FP300km, 10)\n\n\n\nNe_hm_FP300km <- Ne_estimates_FP300km$Ne\nNe_all_FP <- Ne_estimates_FP300km$Ne\n\nNe_all_FP_CI <- c(Ne_estimates_FP300km$ParametricLow,20000)\n```\n:::\n\n\n#### Figure\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFPwindows <- tibble(SampleWindow = c(0,10,40,300),\n        hm_Ne = c(Ne_hm_FP,Ne_hm_FP10km,Ne_hm_FP40km,Ne_hm_FP300km))\n\nFPNevDistance <- ggplot(FPwindows, aes(x = SampleWindow, y = hm_Ne)) + \n                  geom_point() + geom_line() + ylim(0,20000) + xlim(0,300)\nFPNevDistance\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-69-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(\"FP_Ne_v_SampDistance.pdf\", height = 7, width = 7)\n```\n:::\n\n\n:::\n\n### Calculate Effective Density\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Divide by mean distance between sampling sites to get density\nDe_FP <- Ne_hm_FP/meandists_FP\nDe_all_FP <- Ne_all_FP/maxdist_FP\n```\n:::\n\n\nMean density in the Societies is  11.807568 inds/km, or really really large if we consider the whole sample as a single population 34.9942393\n\n\n### Calculate sigma\n\nFollowing Rousset's [-@roussetGeneticDifferentiationEstimation1997] equation:\n\n$$\n\\frac{1}{m} = 4D_e\\sigma^2\n$$\n\nWhich [@pinskyMarineDispersalScales2017] re-arranged to give:\n\n$$\n\\sigma = \\sqrt{\\frac{1}{4D_em}}\n$$\n\nSo now let's plug that into the first equation!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma_fromSlope_FP <- sqrt(1 / (4*De_FP*slope_FP))\n\nsigma_fromSlope_all_FP <- sqrt(1 / (4*De_all_FP*slope_FP))\n```\n:::\n\n\nSo effective density is 11.81 individuals per km, and $\\sigma$ is 64.23 km if we calculate density based on harmonic mean of Ne, or `r `signif(sigma_fromSlope_all_FP,4)` km if we calculate it across the whole sample.\n\n## MigraiNe Method\n\n### Running MigraiNe\n\n::: {.panel-tabset}\n\n#### First Run\n\nI modified the genepop file by adding sampling coordinates as the name of the \nlast individual in each population. There is no coastline for these samples,\nwhich each come from different islands. I just measured from Tahiti to Maupiti\nIt's 65 km from the tip of Tahiti Iti to Puna, so I added that to \neach coordinate\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistfromP1_FP+65\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Puna     Tetia       Tem        Mo     Tahaa \n 65.00000  73.17410  90.15654 116.74566 393.24127 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../Daruanus_FP.txt\nDemographicModel= LinearIBD\n#I modified the genepop file by adding sampling coordinates as the name of the \n#last individual in each population. There is no coastline for these samples,\n# which each come from different islands. I just measured from Tahiti to Maupiti\n# It's 65 km from the tip of Tahiti Iti to Puna, so I added that to \n# each coordinate.\nPSONMax=355 0\n#Neighborhood size is based on mean distance between populations = 75.78\n#355/75.78 = 4.684 so I will use 6 bins\nGeoBinNbr=6\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs. GivenK is number of alleles\n# at each locus (Daruanus.FP@loc.n.all)\nMutationModel=PIM\nGivenK=21,24,8,37,43,26,19,16,43,31,40\nsamplingSpace=,,\nsamplingScale=,,\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,0\nUpperbound=2,10000,1\noneDimCI= 2Nmu, 2Nm, Nb, condS2\nCoreNbrForR=4\n#Plots= all1DProfiles\n1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\n#writeAdHocFiles=T\n```\n:::\n\n\n\nThe first run finished with an error, but a second identical run completed in 50.8666667  minutes. Both runs had very similar results.\n\n#### Second Run\n\nWidened the prior on theta because the first two runs were over\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../Daruanus_FP.txt\nDemographicModel= LinearIBD\n#I modified the genepop file by adding sampling coordinates as the name of the \n#last individual in each population. There is no coastline for these samples,\n# which each come from different islands. I just measured from Tahiti to Maupiti\n# It's 65 km from the tip of Tahiti Iti to Puna, so I added that to \n# each coordinate.\nPSONMax=355 0\n#Neighborhood size is based on mean distance between populations = 75.78\n#355/75.78 = 4.684 so I will use 6 bins\nGeoBinNbr=6\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs. GivenK is number of alleles\n# at each locus (Daruanus.FP@loc.n.all)\nMutationModel=PIM\nGivenK=21,24,8,37,43,26,19,16,43,31,40\nsamplingSpace=,,\nsamplingScale=,,\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,0\nUpperbound=4,10000,1\noneDimCI= 2Nmu, 2Nm, Nb, condS2\nCoreNbrForR=4\n#Plots= all1DProfiles\n1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\n#writeAdHocFiles=T\n\n```\n:::\n\n\n\n#### Fifth Run\n\nRemoved 3 loci, used condS2 parameterization\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nGenepopFileName=../../Daruanus_FP.txt\nDemographicModel= LinearIBD\n#I modified the genepop file by adding sampling coordinates as the name of the \n#last individual in each population. There is no coastline for these samples,\n# which each come from different islands. I just measured from Tahiti to Maupiti\n# It's 65 km from the tip of Tahiti Iti to Puna, so I added that to \n# each coordinate.\nPSONMax=355 0\n#Neighborhood size is based on mean distance between populations = 75.78\n#355/75.78 = 4.684 so I will use 6 bins\nGeoBinNbr=6\nGeoUnit= ind.km\n#alternate way of specifying the habitat, not used for now\n#habitatPars= 0.5 0.5 400 1 0\n#habitatPars=0 0 0 300 0\n#Mutation Model is K-allele = PIM, with k=2 for SNPs. GivenK is number of alleles\n# at each locus (Daruanus.FP@loc.n.all)\nMutationModel=PIM\nGivenK=21,8,37,26,19,16,43,40\nsamplingSpace=,,condS2\nsamplingScale=,,logscale\n#Analysis - this will do 5 runs of 100 points and\n#overwrite those with 10 runs of 250 points\nwriteSequence= Over,Over,Over,Over,Over,Append,10\nStatisticSequence=PAC\nPointNumber=100,100,100,100,100,250\nNrunsperpoint=30,30,30,30,30,50\n#Wide priors on Neu, Nem and g\nLowerBound=0.1,1,1\nUpperbound=4,10000,100000\noneDimCI= 2Nmu, 2Nm, Nb, condS2, g\nCoreNbrForR=4\nPlots= allProfiles\n#1DProfiles=2Nmu, 2Nm, Nb, condS2, g\nextrascale=Nb=logscale\ngraphicFormat=pdf\nwriteAdHocFiles=T\n```\n:::\n\n\nFinished in 56.45 minutes.\n\n:::\n\n### Create Dispersal Kernels\n\n#### Sigma estimates\n\nThis got me the following estimates. \n\nOutput from run 5.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nrunDir <- \"./FP/Migraine/run5\"\nresult <- read_migraine(runDir)\n  \nNS_FP <- result[\"NS\"]\nNSCI_FP <- c(result[\"NSCI1\"],result[\"NSCI2\"])\nNmu_FP <- result[\"Nmu\"]\nNm_FP <- result[\"Nm\"]\ng_FP <- result[\"g\"]\nlattice2geog_FP <- result[\"lattice2geog\"]\n\nsigma2_FP <- g_to_sigma2(g_FP)\nsigma_fromsigma2_FP <- sqrt(sigma2_FP*lattice2geog_FP)\nsigma_fromNS_FP <- sqrt(NS_FP/(4*De_FP))\nsigmaCI_fromNS_FP <- sqrt(NSCI_FP/(4*De_FP))\n\nsigma_fromNS_all_FP <- sqrt(NS_FP/(4*De_all_FP))\nsigmaCI_fromNS_all_FP <- sqrt(NSCI_FP/(4*De_all_FP))\n```\n:::\n\n\nThe $\\sigma$ we get from $F_{ST}$ ~ Distance is 64.2, and from Neighborhood Size $\\sigma$ is 88. We again get a lower estimate from $\\sigma^2$, with $\\sigma$ = 15\n\n### Confidence Intervals\n\nPropagating error sorta following Pinsky et al. table S2\n\n#### Error in Ne\n\n::: {.panel-tabset}\n\n##### For Harmonic Mean Method\n\nFollowing @pinskyUsingIsolationDistance2010 I am going to bootstrap across the confidence intervals for each Nb estimate. Unfortunately, the new jackknife method of @jonesImprovedConfidenceIntervals2016 often results in infinite upper bounds with marine data. I'm going to use the jackknife CIs. I'm also going to use a uniform distribution for the error because approximating the error structure with ChiSq or Normal distributions is not a simple task and I'm just trying to get a sketch of the error to compare with MigraiNe anyway. I'm going to set \"Infinite\" values in the upper CI to 20,000 since I rarely see upper bounds that high.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNe_estimates_FP$JackknifeHigh[which(is.na(Ne_estimates_FP$JackknifeHigh))] <- 20000\nNe_estimates_FP$JackknifeHigh <- as.numeric(Ne_estimates_FP$JackknifeHigh)\nNe_estimates_FP$JackknifeLow <- as.numeric(Ne_estimates_FP$JackknifeLow)\n\nNe_error_FP <- NULL\nfor(n in 1:100000){\n  hm <- harm_mean(mapply(runif, n=1, \n                   min=Ne_estimates_FP$JackknifeLow,\n                   max=Ne_estimates_FP$JackknifeHigh))\n  Ne_error_FP <- c(Ne_error_FP,hm)\n}\nnames(Ne_error_FP) <- NULL\n#write.csv(Ne_error_FP, \"FP/Ne_error_FP.csv\",quote=F,row.names = F)\nggplot(data = tibble(Ne_error_FP), aes(x=Ne_error_FP)) + geom_density()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-77-1.png){width=672}\n:::\n:::\n\n\n##### For Whole Sample Method\n\nNaaykens and D'Aloia showed that using the whole sample to estimate density gives pretty similar results to the harmonic mean method, so I'm also going to try that. \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNb <- Ne_all_FP\nr2_FP <- Ne_estimates_FP300km$r2\n#from Waples 2006 table 2\ner2_FP <- 1/Ne_estimates_FP300km$SampSize + 3.19/Ne_estimates_FP300km$SampSize ^2 \ndf_FP <- Ne_estimates_FP300km$IndAlleles\n\nWaplesMonoNe(r2_FP - er2_FP)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11688.35\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# this shows that we can get approximately what NeEstimator gives us... \n#not sure why its not exact... must be missing some correction\nrCI_FP <- df_NC*r2_FP / (qchisq(c(0.025,0.975), df = df_FP))\nWaplesMonoNe(rCI_NC - er2_NC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  3729.688 16288.111\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n#and now to get and plot the error distribution\nNe_error_all_FP <- WaplesMonoNe(((df_FP*r2_FP)/(rchisq(100000, df = df_FP))) - er2_FP)\n\nggplot(data = tibble(Ne_error_all_FP), aes(x=Ne_error_all_FP)) + \n  geom_density() + xlim(0,30000)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-78-1.png){width=672}\n:::\n:::\n\n\n:::\n\n#### Error in Effective Density\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNe_error_FP <- read_csv(file = \"FP/Ne_error_FP.csv\")$x %>% as.vector\n\nDe_error_FP <- Ne_error_FP /rnormTrunc(100000, mean = meandists_FP,\n                    sd = (65-10)/1.96, min = 1e-10)\n\nDe_error_all_FP <- Ne_error_all_FP / maxdist_FP\n\nggplot(data = tibble(De_error_FP), aes(x=De_error_FP)) +\n  geom_density() + xlim(0,1000)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-79-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(data = tibble(De_error_all_FP), aes(x=De_error_all_FP)) +\n  geom_density() + xlim(0,1000)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-79-2.png){width=672}\n:::\n:::\n\n\n#### Error in Slope\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nslope_se_FP <- summary(lmodel_FP)$coefficients[2,2]\n\nggplot(data = tibble(x = c(1e-6,1e-4)), aes(x=x)) + stat_function(fun=dnormTrunc, args = list(mean = slope_FP, sd=slope_se_FP, min = 0))\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-80-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nslope_error_FP <- rnormTrunc(100000, mean = slope_FP, sd = slope_se_FP,min = 1e-10)\n\nggplot(data = tibble(slope_error_Fiji), aes(x=slope_error_Fiji)) + geom_density()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-80-2.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nsigma_error_fromSlope_FP <- sqrt(1 / (4*De_error_FP*slope_error_FP))\n\nsigma_error_fromSlope_all_FP <- sqrt(1 / (4*De_error_all_FP*slope_error_FP))\n\nggplot(data = tibble(sigma_error_fromSlope_FP), aes(x=sigma_error_fromSlope_FP)) +\n  geom_density() + xlim(0,1000)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-80-3.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(data = tibble(sigma_error_fromSlope_all_FP), aes(x=sigma_error_fromSlope_all_FP)) +\n  geom_density() + xlim(0,1000)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-80-4.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nquantile(sigma_error_fromSlope_FP, c(0.025, 0.975))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    2.5%    97.5% \n 10.3419 100.5389 \n```\n:::\n:::\n\n\n#### Error in Neighborhood Size\nUsing a uniform distribution is out because there is clearly a peaked distribution in the Migraine output. So I am using a quick fit to a truncated lognormal distribution\n\n![Migraine_Run2_Neighborhood_Theta](figures/Da_FP_Neighborhood.jpg)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNSCI_FP\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       NSCI1        NSCI2 \n       67763 531462708061 \n```\n:::\n\n```{.r .cell-code}\ncurve(dlnorm(x, meanlog = log(NS_FP), sdlog = log(7.9), log = T))\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-81-1.png){width=672}\n:::\n\n```{.r .cell-code}\nqlnorm(c(0.025,0.975),meanlog = log(NS_FP), sdlog = log(206.5))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.062342e+01 1.260620e+10\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNeighborhood_error_FP <- rlnormTrunc(n = 100000, meanlog = log(NS_FP), \n                                     sdlog = log(210), min = NSCI_FP[1], max = Inf)\n\n\nggplot(data = tibble(Neighborhood_error_FP), aes(x=Neighborhood_error_FP)) + \n  geom_density() + scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-82-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nsigma_error_fromNS_FP <- sqrt(Neighborhood_error_FP/(4*De_error_FP))\n\nsigma_error_fromNS_all_FP <- sqrt(Neighborhood_error_FP/(4*De_error_all_FP))\n\nnames(sigma_error_fromNS_FP) <- NULL\n\nggplot(data = tibble(sigma_error_fromNS_FP), \n       aes(x=sigma_error_fromNS_FP)) +\n       geom_density() + scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-82-2.png){width=672}\n:::\n:::\n\n\n#### Plot Dispersal Kernels \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nkernelplot_FP <- ggplot(data.frame(x=c(0,100)),aes(x)) + \n  map(.x = sample(sigma_error_fromNS_FP,1000), .f = function(sigma){\n    stat_function(fun = dexp, args = list(rate = 1/sigma),\n           colour = \"lightblue\",                                       linetype=1,size=0.1,alpha = 0.2) }) +\n    map(.x = sample(sigma_error_fromSlope_FP,1000), \n        .f = function(sigma){\n         stat_function(fun = dexp, args = list(rate = 1/sigma),\n                colour = \"lightgreen\",                                       linetype=1,size=0.1,alpha = 0.2) }) +\n      stat_function(fun=dexp,args=list(rate = 1/sigma_fromSlope_FP), linetype=2,\n                    aes(color=\"IBD_Slope\"), show.legend = T) +\n      stat_function(fun=dexp,args=list(rate = 1/sigma_fromSlope_all_FP), linetype=2,\n                              aes(color=\"IBD_Slope_1pop\"),\n                                                          show.legend = T) +\n      stat_function(fun=dexp,args=list(rate = 1/sigma_fromsigma2_FP), linetype=2,\n                              aes(color=\"Migraine_Sigma2\"), \n                                                          show.legend = T) +\n      stat_function(fun=dexp,args=list(rate = 1/sigma_fromNS_FP), linetype=2,\n                           aes(color=\"Migraine_Neighborhood_Size\"), \n                                                    show.legend = T) +\n      stat_function(fun=dexp,args=list(rate = 1/sigma_fromNS_all_FP), linetype=2,\n                           aes(color=\"Migraine_Neighborhood_Size_1pop\"),\n                                                    show.legend = T) +\n      xlab(\"Alongshore Distance (km)\") + \n        ylab(\"Dispersal probability density\") +\n      scale_color_manual(\"Kernel\",values = \n                    c(IBD_Slope = \"green\",\n                     IBD_Slope_1pop = \"darkgreen\",\n                     Migraine_Sigma2=\"darkblue\", \n                      Migraine_Neighborhood_Size =\"blue\",\n                      Migraine_Neighborhood_Size_1pop = \"cyan4\")) +\n      ylim(0,0.1)\n\n\nkernelplot_FP\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-83-1.png){width=672}\n:::\n:::\n\n\n# Comparing Across Archipelagos\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nNC <- tibble(Archipelago = \"New Caledonia\",\n            Estimate = c(\"Mean sampling distance\",\n                        \"Fst ~ Distance Slope\",\n                        \"Ne Harmonic Mean\",\n                        \"Ne as one population\",\n                        \"Effective Density\",\n                        \"Effective Density one pop\",\n                        \"Theta\",\n                        \"Nm\",\n                        \"g\",\n                        \"Neighborhood Size\",\n                        \"Neighborhood Size Low CI\",\n                        \"Neighborhood Size High CI\",\n                        \"Bin Width\",\n                        \"sigma from slope\",\n                        \"sigma from slope; Ne as one pop\",\n                        \"sigma from NS\",\n                        \"sigma from NS; Ne as one pop\",\n                        \"sigma from sigma2\"),\n             Values = c(meandists_NC,\n                        slope_NC,\n                        Ne_hm_NC,\n                        Ne_all_NC,\n                        De_NC,\n                        De_all_NC,\n                        Nmu_NC,\n                        Nm_NC,\n                        g_NC,\n                        NS_NC,\n                        NSCI_NC[1],\n                        NSCI_NC[2],\n                        lattice2geog_NC,\n                        NA,\n                        NA,\n                        sigma_fromNS_NC,\n                        sigma_fromNS_all_NC,\n                        sigma_fromsigma2_NC\n                        ))\n\nFiji <- tibble(Archipelago = \"Fiji\",\n            Estimate = c(\"Mean sampling distance\",\n                        \"Fst ~ Distance Slope\",\n                        \"Ne Harmonic Mean\",\n                        \"Ne as one population\",\n                        \"Effective Density\",\n                        \"Effective Density one pop\",\n                        \"Theta\",\n                        \"Nm\",\n                        \"g\",\n                        \"Neighborhood Size\",\n                        \"Neighborhood Size Low CI\",\n                        \"Neighborhood Size High CI\",\n                        \"Bin Width\",\n                        \"sigma from slope\",\n                        \"sigma from slope; Ne as one pop\",\n                        \"sigma from NS\",\n                        \"sigma from NS; Ne as one pop\",\n                        \"sigma from sigma2\"),\n             Values = c(meandists_Fiji,\n                        slope_Fiji,\n                        Ne_hm_Fiji,\n                        Ne_all_Fiji,\n                        De_Fiji,\n                        NA,\n                        Nmu_Fiji,\n                        Nm_Fiji,\n                        g_Fiji,\n                        NS_Fiji,\n                        NSCI_Fiji[1],\n                        NSCI_Fiji[2],\n                        lattice2geog_Fiji,\n                        sigma_fromSlope_Fiji,\n                        NA,\n                        sigma_fromNS_Fiji,\n                        NA,\n                        sigma_fromsigma2_Fiji\n                        ))\n\nFP <- tibble(Archipelago = \"Societies\",\n            Estimate = c(\"Mean sampling distance\",\n                        \"Fst ~ Distance Slope\",\n                        \"Ne Harmonic Mean\",\n                        \"Ne as one population\",\n                        \"Effective Density\",\n                        \"Effective Density one pop\",\n                        \"Theta\",\n                        \"Nm\",\n                        \"g\",\n                        \"Neighborhood Size\",\n                        \"Neighborhood Size Low CI\",\n                        \"Neighborhood Size High CI\",\n                        \"Bin Width\",\n                        \"sigma from slope\",\n                        \"sigma from slope; Ne as one pop\",\n                        \"sigma from NS\",\n                        \"sigma from NS; Ne as one pop\",\n                        \"sigma from sigma2\"),\n             Values = c(meandists_FP,\n                        slope_FP,\n                        Ne_hm_FP,\n                        Ne_all_FP,\n                        De_FP,\n                        De_all_FP,\n                        Nmu_FP,\n                        Nm_FP,\n                        g_FP,\n                        NS_FP,\n                        NSCI_FP[1],\n                        NSCI_FP[2],\n                        lattice2geog_FP,\n                        sigma_fromSlope_FP,\n                        sigma_fromSlope_all_FP,\n                        sigma_fromNS_FP,\n                        sigma_fromNS_all_FP,\n                        sigma_fromsigma2_FP\n                        ))            \n\nacross.archipelagos <- bind_rows(NC,Fiji,FP)\n\nacross.archipelagos.df <- dcast(across.archipelagos,Archipelago~Estimate)\n\n\n\n#write_csv(across.archipelagos.df,\"Across_archipelago_statistics.csv\")\n       \nerrors <- enframe(c(NC_NS = sigma_error_fromNS_NC,\n                    NC_NS_all = sigma_error_fromNS_all_NC,\n                    Fiji_NS = sigma_error_fromNS_Fiji,\n                    Fiji_Slope = sigma_error_fromSlope_Fiji,\n                    FP_NS = sigma_error_fromNS_FP, \n                    FP_NS_all = sigma_error_fromNS_all_FP,\n                    FP_Slope = sigma_error_fromSlope_FP,\n                    FP_Slope_all = sigma_error_fromSlope_all_FP),\n                  name = \"Archipelago\", \n                  value = \"Sigma\") %>% \n                mutate(Archipelago = str_remove(Archipelago, pattern=\"\\\\d+$\"))\n\nviolins <- ggplot(errors, aes(x = Archipelago, y = Sigma)) + geom_violin() + \n  coord_cartesian(ylim = c(5, 1000)) + \n  #geom_point(data = across.archipelagos, \n  #           mapping = aes(x = \"Archipelago\", y = \"Sigma\")) +\n  scale_y_log10()\n\nboxes <- ggplot(errors, aes(x = Archipelago, y = Sigma)) + geom_boxplot() + \n  coord_cartesian(ylim = c(5, 1000)) + \n  #geom_point(data = across.archipelagos, \n  #           mapping = aes(x = \"Archipelago\", y = \"Sigma\")) +\n  scale_y_log10()\n```\n:::\n\n\n## Make figures for the proposal\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nerrors.p <- enframe(c(`New Caledonia` = sigma_error_fromNS_NC,\n                    Fiji = sigma_error_fromSlope_Fiji,\n                    Societies = sigma_error_fromSlope_FP),\n                  name = \"Archipelago\", \n                  value = \"Sigma\") %>% \n                mutate(Archipelago = str_remove(Archipelago, pattern=\"\\\\d+$\"))\n\n#create a tibble with the point estimates of interest\npoint_estimates <- across.archipelagos.df %>%  select(\"Archipelago\",\"sigma from slope\") %>% \n  mutate(`sigma from slope` = replace(`sigma from slope`,2,\n                                      across.archipelagos.df$`sigma from NS`[2])) \n\n\nviolins.p <- errors.p %>% remove_missing() %>% \n  mutate(Archipelago = factor(Archipelago,levels = c(\"New Caledonia\",\n                                                     \"Fiji\",\"Societies\"))) %>% \n  ggplot() + geom_violin(mapping = aes(x = Archipelago, y = Sigma)) + \n   geom_point(data = point_estimates, \n             mapping = aes(x = Archipelago, y = `sigma from slope`), \n             color = \"grey\", size = 5) +\n  ylim(0,1000) +\n    coord_cartesian(ylim = c(1, 1000)) + \n  scale_y_log10()\n\n#ggsave(\"Daruanus_archipelagos_violins.pdf\",violins.p)\n\n\n\nkernelplot_archipelagos <- ggplot(data.frame(x=c(0,250)),aes(x)) + \n  map(.x = sample(sigma_error_fromNS_NC,500), .f = function(sigma){\n          stat_function(fun = dexp, args = list(rate = 1/sigma),\n                  colour = \"palevioletred\",\n                  linetype=1,size=0.1,alpha = 0.1) }) +\n   map(.x = sample(sigma_error_fromSlope_Fiji,500), .f = function(sigma){\n                  stat_function(fun = dexp, args = list(rate = 1/sigma),\n                 colour = \"goldenrod\", \n                 linetype=1,size=0.1,alpha = 0.1) }) +\n   map(.x = sample(sigma_error_fromSlope_FP,500), .f = function(sigma){\n                stat_function(fun = dexp, args = list(rate = 1/sigma),\n                 colour = \"lightblue\",\n                 linetype=1,size=0.1,alpha = 0.1) }) +\n  stat_function(fun=dexp,args=list(rate = 1/sigma_fromNS_NC), linetype=1,\n                aes(color=\"New Caledonia\"), show.legend = T) +\n  stat_function(fun=dexp,args=list(rate = 1/sigma_fromSlope_Fiji), linetype=1,\n                              aes(color=\"Fiji\"), \n                                                          show.legend = T) +\n  stat_function(fun=dexp,args=list(rate = 1/sigma_fromSlope_FP), linetype=1,\n                              aes(color=\"Societies\"), \n                                                      show.legend = T) +\n  xlab(\"Alongshore Distance (km)\") + ylab(\"Dispersal probability density\") +\n  scale_color_manual(\"Archipelago\",values = \n                    c(`New Caledonia` = \"red\",\n                      Fiji = \"orange\",\n                      Societies=\"blue\" \n                   )) +\n  ylim(0,0.02)\n\nkernelplot_archipelagos\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-85-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n#ggsave(\"Darunaus_archipelagos_kernels.pdf\", kernelplot_archipelagos)\n```\n:::\n\n\n::: {.panel-tabset}\n\n### Violin Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nviolins\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-86-1.png){width=672}\n:::\n:::\n\n\n### Box Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxes\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-87-1.png){width=672}\n:::\n:::\n\n\n\n### Final Figure\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkernelplot_archipelagos\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-88-1.png){width=672}\n:::\n:::\n\n\n:::\n\n# Treemix\n\nI want to check out what Treemix can do with this dataset, and see if it has any insight into directionality. The treemix manual says:\n\n>the entries for each population are the mean length, variance in length, and number of haplotypes at each microsatellite in each population, again comma-delimited.\n\n## Convert data\n\nHere is code to convert genepop format to treemix format:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npops <- c(\"PNG\",\"New Caledonia\",\"Fiji\", \"Societies\",\"Tuamotus\")\nloci <- c(\"Locus_1\",\"Locus_2\",\"Locus_3\",\"Locus_4\",\"Locus_5\",\"Locus_6\",\n       \"Locus_7\",\"Locus_8\")\n\nDaruanus4pop <- read.genepop(\"Daruanus/Daruanus_All_8locus_5pops.gen\", \n                             ncode = 3L)\nlevels(Daruanus4pop@pop)<- pops\n\n\nDaruanus4pop.gtypes <- genind2gtypes(Daruanus4pop)\n\npopmatrix <- tibble(Daruanus4pop.gtypes@data) %>% \n                    mutate(allele = as.numeric(allele)) %>% \n                    group_by(stratum,locus)\n                        \n\npopsumlong <- popmatrix  %>%  summarize(mean = mean(allele,na.rm=T), \n                      var = var(allele, na.rm=T),\n                           n = n())\n\npopsumwide <- popsumlong %>% pivot_wider(names_from = stratum, \n                      values_from = c(mean,var,n))\n\npopsumwide <- popsumwide[,c(\"mean_PNG\",\"var_PNG\",\"n_PNG\",\n               \"mean_New Caledonia\",\"var_New Caledonia\",\n               \"n_New Caledonia\",\n               \"mean_Fiji\",\"var_Fiji\",\"n_Fiji\",\n               \"mean_Societies\",\"var_Societies\",\"n_Societies\",\n                \"mean_Tuamotus\",\"var_Tuamotus\",\"n_Tuamotus\")]\n\n#write_csv(popsumwide,\"Daruanus/treemix/Daruanus_treemix.txt\")\n```\n:::\n\n\n\nDid a search and replace in `bbedit` to make the final file format, and then gzipped it.\n\n```\nSearch: (,[\\d\\.]+,\\d+),\nReplace \\1 \n```\n\n## Explore Treemix\n\nInstalled `Treemix` on Argonaute via Mamba. Had to follow [these](https://stackoverflow.com/questions/22222666/error-while-loading-shared-libraries-libgsl-so-0-cannot-open-shared-object-fil) instructions to add `libgsl.so.25` to `/etc/ld.so.conf` first\n\nI'm first going to try a variety of m values and root at New Caledonia and Tuamotus.\n\n\n::: {.cell}\n\n```{.bash .cell-code  code-fold=\"true\"}\n(base) eric@Saraswati ~/github/IBD_Kernels/Daruanus/treemix$ treemix -i Daruanus_treemix.txt.gz -o PNG_0m -micro -root PNG -global                                                                                          \n\nTreeMix v. 1.13\n$Revision: 231 $\n\nnpop:5 nsnp:8\nEstimating covariance matrix in 8 blocks of size 1\nSEED: 1670724878\nStarting from:\n((Fiji:4.44185,Tuamotus:7.32221):0,Societies:0);\nAdding PNG [4/5]\nln(likelihood): -17.411228 \n(PNG:5.50807,(Fiji:1.12789,(Tuamotus:4.74938,Societies:0):5.11134):5.50807);\nAdding NewCaledonia [5/5]\nln(likelihood): -25.594418 \n((Fiji:1.60844,(PNG:6.74548,NewCaledonia:0):3.60694):2.43321,(Tuamotus:4.78333,Societies:0):2.43321);\nTesting global rearrangements\nFiji:1.60844 PNG:6.74548\n-26.530906 -25.594418\nFiji:1.60844 Societies:0\n-28.39933 -25.594418\nPNG:6.74548 Fiji:1.60844\n-26.530906 -25.594418\nNewCaledonia:0 Tuamotus:4.78333\n-28.219739 -25.594418\nSocieties:0 Fiji:1.60844\n-28.39933 -25.594418\nSet root above PNG\nDONE.\n\n\ntreemix -i Daruanus_treemix.txt.gz -o PNG_0m -micro -root PNG -global -m 0\ntreemix -i Daruanus_treemix.txt.gz -o PNG_1m -micro -root PNG -global -m 1\ntreemix -i Daruanus_treemix.txt.gz -o PNG_2m -micro -root PNG -global -m 2\ntreemix -i Daruanus_treemix.txt.gz -o PNG_3m -micro -root PNG -global -m 3\ntreemix -i Daruanus_treemix.txt.gz -o PNG_4m -micro -root PNG -global -m 4\ntreemix -i Daruanus_treemix.txt.gz -o PNG_5m -micro -root PNG -global -m 5\ntreemix -i Daruanus_treemix.txt.gz -o PNG_6m -micro -root PNG -global -m 6\n\n\ntreemix -i Daruanus_treemix.txt.gz -o Tua_0m -micro -root Tuamotus -global -m 0 \ntreemix -i Daruanus_treemix.txt.gz -o Tua_1m -micro -root Tuamotus -global -m 1 \ntreemix -i Daruanus_treemix.txt.gz -o Tua_2m -micro -root Tuamotus -global -m 2 \ntreemix -i Daruanus_treemix.txt.gz -o Tua_3m -micro -root Tuamotus -global -m 3 \ntreemix -i Daruanus_treemix.txt.gz -o Tua_4m -micro -root Tuamotus -global -m 4 \ntreemix -i Daruanus_treemix.txt.gz -o Tua_5m -micro -root Tuamotus -global -m 5\n\n```\n:::\n\n\n### Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsetwd(\"./treemix/5pop_explore\")\nplot_tree(\"PNG_0m\")\nplot_resid(\"PNG_0m\", \"../5poporder.txt\")\nplot_tree(\"PNG_1m\")\nplot_resid(\"PNG_1m\", \"../5poporder.txt\")\nplot_tree(\"PNG_2m\")\nplot_resid(\"PNG_2m\", \"../5poporder.txt\")\nplot_tree(\"PNG_3m\")\nplot_tree(\"PNG_4m\")\nplot_tree(\"PNG_5m\")\nplot_tree(\"PNG_6m\")\n\nplot_tree(\"PNG_2mse\")\nplot_resid(\"PNG_2mse\", \"../5poporder.txt\")\n\nplot_tree(\"Tua_0m\")\nplot_tree(\"Tua_1m\")\nplot_tree(\"Tua_2m\")\nplot_tree(\"Tua_3m\")\nplot_tree(\"Tua_4m\")\nplot_tree(\"Tua_4m\")\nplot_tree(\"Tua_5m\")\n```\n:::\n\n\n## How many migration events?\n\nIt turns out you can evaluate the likelihood of the Treemix model in the same way that is frequently done for structure using the @evannoDetectingNumberClusters2005 method. @fitakOptMEstimatingOptimal2021 developed the [OptM package](https://cran.r-project.org/web/packages/OptM/readme/README.html) to do this, and a few other statistics as well\n\n### Run Treemix at a variety of m\n\nRun 5 replicates of Treemix for migration edges of 1 through 10.\n\n\n::: {.cell}\n\n```{.bash .cell-code  code-fold=\"true\"}\nfor m in {1..10}; do\n       \n  for n in {1..5}; do\n              # Generate random seed\n        s=$RANDOM\n        treemix -i ../Daruanus_treemix.txt.gz -o PNG.${n}.${m} -global -m ${m} -seed ${s} -micro\n  done\ndone\n\n```\n:::\n\n\n### OptM\n\nSo the OptM algorithm doesn't work because the standard deviation across replicates is zero, because these are microsats, not SNPs. So I will borrow the `read.treemix()` function and do the analysis myself.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n#PNG <- optM(\"./\", tsv=\"PNG_root_OptM.tsv\")\n\nPNG <- OptM:::read.treemix(\"treemix/5pops_PNG\",orientagraph = F) %>% arrange(M) %>% \n        group_by(M) %>% summarize(LnPD = mean(LnPD)) %>% \n          mutate(deltaM = LnPD- lag(LnPD))\n\nPNG$deltaM[1] <- 0\n\nPNG %>% ggplot(aes(x = M, y = LnPD)) + geom_point() + scale_x_continuous(n.breaks=10)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-93-1.png){width=672}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nPNG %>% ggplot(aes(x = M, y = deltaM)) + geom_point() + geom_line() +\n            scale_x_continuous(n.breaks=10)\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-93-2.png){width=672}\n:::\n:::\n\n\n### Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsource(\"./treemix/plotting_funcs.R\")\nplot_tree(\"./treemix/5pops_PNG/PNG.5.1\")\nplot_resid(\"./treemix/5pops_PNG/PNG.1.1\",\"./treemix/5poporder.txt\")\n```\n:::\n\n\n![Final Tree with 1 edge output by Treemix](./treemix/OptM_Final_Daruanus_Treemix_Tree.jpg)\n![Final Tree with 1 edge redrawn at itol.de](./treemix/OptM_Final_Daruanus_Treemix_rooted.jpg)\n\n\n\n# Migrate-n\n\nI also want to measure gene flow between archipelagos with migrate-n, to test the treemix model and other models.\n\n## Setup\n\nHere's the parmfile I set up\n\n::: {.cell}\n\n```{.bash .cell-code  code-fold=\"true\"}\n################################################################################\n# Parmfile for Migrate 3.6.4 [do not remove these first TWO lines]# generated automatically on\n# Fri Feb 4 2022\nmenu=NO\nnmlength=10\ndatatype=Brownian\n\n\n\nweights=NO\nrecover=NO\nfast-likelihood=NO\ninheritance-scalars={1.00000000000000000000}\ninclude-unknown=NO\nmicro-threshold=10\npopulation-relabel={1 2 3 4}\ninfile=../Daruanus_All_8locus.mig\nrandom-seed=AUTO #OWN:410568459\ntitle= Palythoa tuberculosa - Hawaii\nprogress=YES\nlogfile=YES:logfile.txt\nprint-data=NO\noutfile=outfile.txt\npdf-outfile=outfile.pdf\npdf-terse=YES\nuse-M=YES\nprint-tree=NONE\nmig-histogram=MIGRATIONEVENTSONLY\nskyline=NO #needs mig-histogram=ALL:...\nmutation=CONSTANT\ncustom-migration={\n* * 0 0\n* * * 0\n0 * * *\n0 0 * *\n}\ngeo=NO\n\nbayes-posteriorbins= 500 500\nbayes-posteriormaxtype=TOTAL\nbayes-file=YES:bayesfile\nbayes-allfile=YES:bayesallfile\nbayes-all-posteriors=YES:bayesallposterior\nbayes-proposals= THETA METROPOLIS-HASTINGS Sampler\nbayes-proposals= MIG METROPOLIS-HASTINGS Sampler\nbayes-proposals= DIVERGENCE METROPOLIS-HASTINGS Sampler\nbayes-proposals= DIVERGENCESTD METROPOLIS-HASTINGS Sampler\nbayes-priors= THETA WEXPPRIOR: 0.0 0.001 0.1000000 0.01000 \nbayes-priors= MIG WEXPPRIOR: 0.000100 1000.000000 10000 100\nbayes-priors= RATE * * UNIFORMPRIOR: 0.000000 10000000000.000000 1000000000.000000 \nbayes-hyperpriors=NO\nlong-chains=1\nlong-inc=100\nlong-sample=10000\nburn-in=2000  \nauto-tune=YES:0.440000\nassign=NO\nheating=YES:1:{1.000000,1.500000,3.000000,5,10,1000000.000000}\nheated-swap=YES\nmoving-steps=NO\ngelman-convergence=No\nreplicate=YES:3\nend\n\n```\n:::\n\n\nAnd the datafile I converted from the 8-locus genpop file with PGDSpider. \n\nThe header looks like\n\n::: {.cell}\n\n```{.bash .cell-code}\n4 8 . D. aruanus dataset lumped by archipelago with 3 loci removed for HWE violation - EDC 3/28/2022\n#@M 2 3 2 2 2 2 2 2\n```\n:::\n\n\n## Initial Runs\n\nCopied up to Nautilus and ran it with:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nscreen -S migrate_testrun\n\nmpirun -np 32 ~/migrate-4.4.4/src/migrate-n-mpi parmfile\n\n# And on Montastraea\nmpirun -np 16 ~/eric_data/migrate-3.7.2/src/migrate-n-mpi parmfile\n\n```\n:::\n\n\n::: {.panel-tabset}\n\n### Symmetric Stepping Stone\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* S 0 0\nS * S 0\n0 S * S\n0 0 S *\n}\n```\n:::\n\n\n### East to West Stepping Stone\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* * 0 0\n0 * * 0\n0 0 * *\n0 0 0 *\n}\n```\n:::\n\n\n### West to East Stepping Stone\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* 0 0 0\n* * 0 0\n0 * * 0\n0 0 * *\n}\n\n```\n:::\n\n\n### Smaller Priors\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nbayes-priors= THETA WEXPPRIOR: 0.0 0.01 1.000000 0.01000 \nbayes-priors= MIG WEXPPRIOR: 0.0100 100.000000 1000 10\n\n```\n:::\n\n\nThis definitely improved things. Now all gene flow parameters are around 40! But the model marginal likelihood is all wonky.\n\n### Divergence with Gene Flow\n\nNow I'm going to add divergence with gene flow (going from West to East). Also change the migration priors to uniform.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nbayes-priors= THETA * * WEXPPRIOR: 0.0 0.01 1.000000 0.01000 \nbayes-priors= MIG * * UNIFORMPRIOR: 0 100 10\nbayes-priors= SPLIT * * UNIFORMPRIOR: 0 1000  10\nbayes-priors= SPLITSTD * * UNIFORMPRIOR: 0 500 10 \n\ncustom-migration={\n*       0       0       0\nD       *       0       0\n0       D       *       0\n0       0       D       *\n}\n```\n:::\n\n\nAfter [this exchange](https://groups.google.com/g/migrate-support/c/49njPlwp62E/m/xzy4DkU9AwAJ) with Peter, I changed the priors to be the same as Theta.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nbayes-priors= THETA * * WEXPPRIOR: 0.0 0.01 1.000000 0.01000 \nbayes-priors= MIG * * UNIFORMPRIOR: 0 100 10\ndivergence-distrib = S\nbayes-priors= SPLIT * * WEXPPRIOR: 0.0 0.01 1.000000 0.01000 \nbayes-priors= SPLITSTD * * WEXPPRIOR: 0.0 0.01 1.000000 0.01000 \n```\n:::\n\n\nResults look like there is little to no gene flow among archipelagos\n\n### Divergence without gene flow\n\nSo let's look at a model of no gene flow\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n*       0       0       0\nd       *       0       0\n0       d       *       0\n0       0       d       *\n}\n```\n:::\n\n\n:::\n\n## Final Runs\n\nOK, so after some futzing around with these models, I am now trying 11 models for what I hope will be a publishable analysis.\n\nAll built on this parmfile\n\n::: {.cell}\n\n```{.bash .cell-code  code-fold=\"true\"}\n################################################################################\n# Parmfile for Migrate 3.6.4 [do not remove these first TWO lines]# generated automatically on\n# Fri Feb 4 2022\nmenu=NO\nnmlength=10\ndatatype=Brownian\nweights=NO\nrecover=NO\nfast-likelihood=NO\ninheritance-scalars={1.00000000000000000000}\ninclude-unknown=NO\nmicro-threshold=10\npopulation-relabel={1 2 3 4}\ninfile=../../Daruanus_All_8locus.mig\nrandom-seed=AUTO #OWN:410568459\ntitle= Dascyllus aruanus - South Pacific Archipelagos\nprogress=YES\nlogfile=YES:logfile.txt\nprint-data=NO\noutfile=outfile.txt\npdf-outfile=outfile.pdf\npdf-terse=YES\nuse-M=NO\nprint-tree=NONE\nmig-histogram=MIGRATIONEVENTSONLY\nskyline=NO #needs mig-histogram=ALL:...\nmutation=CONSTANT\ncustom-migration={\n* S 0 0\nS * S 0\n0 S * S\n0 0 S *\n}\ngeo=NO\nbayes-posteriorbins= 2000 2000\nbayes-posteriormaxtype=TOTAL\nbayes-file=YES:bayesfile\nbayes-allfile=YES:bayesallfile\nbayes-all-posteriors=YES:bayesallposterior\nbayes-proposals= THETA METROPOLIS-HASTINGS Sampler\nbayes-proposals= MIG METROPOLIS-HASTINGS Sampler\nbayes-proposals= SPLITSTD METROPOLIS-HASTINGS Sampler\nbayes-proposals= SPLIT METROPOLIS-HASTINGS Sampler\nbayes-priors= THETA * * WEXPPRIOR: 0.0 0.1 20.00000 0.1000 \nbayes-priors= MIG * * UNIFORMPRIOR: 0 100 10\ndivergence-distrib= E\nbayes-priors= SPLIT * * WEXPPRIOR: 0.0 0.01 1.000000 0.01000\nbayes-priors= SPLITSTD * * WEXPPRIOR: 0.0 0.01 1.000000 0.01000\nmigration=PRIOR:10\nrate=PRIOR:50\nsplit=PRIOR:10\nsplitstd=PRIOR:10\nbayes-hyperpriors=NO\nlong-chains=1\nlong-inc=100\nlong-sample=10000\nburn-in=10000  \nauto-tune=YES:0.440000\nassign=NO\nheating=YES:1:{1.000000,1.500000,3.000000,7,15,1000000.000000}\nheated-swap=YES\nmoving-steps=NO\ngelman-convergence=No\nreplicate=NO\nend\n```\n:::\n\n\n### Models\n\n::: {.panel-tabset}\n\n#### Asymmetric Equilibrium Gene Flow\n\nThe \"standard\" stepping stone model. Gene flow at equilibrium between neighboring archipelagos\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* * 0 0 0\n* * * 0 0\n0 * * * 0\n0 0 * * *\n0 0 0 * *\n}\n```\n:::\n\n\n#### Symmetric Equilibrium Gene Flow\n\nSame as above, but gene flow in either direction is symmetric for each pair of archipelagos\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* S 0 0 0\nS * S 0 0\n0 S * S 0\n0 0 S * S\n0 0 0 S *\n}\n```\n:::\n\n\n### East To West Equilibrium\n\nEast to West gene flow only. Following the South Equatorial current\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* * 0 0 0\n0 * * 0 0\n0 0 * * 0\n0 0 0 * *\n0 0 0 0 *\n}\n```\n:::\n\n\n### West to East Equilibrium\n\nThe other way...\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* 0 0 0 0\n* * 0 0 0\n0 * * 0 0\n0 0 * * 0\n0 0 0 * *\n}\n```\n:::\n\n\n#### n-Island\n\nAll populations the same size. Gene flow between all populations at the same rate\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\nm m m m m\nm m m m m\nm m m m m\nm m m m m\nm m m m m\n}\n```\n:::\n\n\n#### Panmixia\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n*\n}\n\n```\n:::\n\n\n#### East to West Divergence with Gene Flow\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* D 0 0 0\n0 * D 0 0\n0 0 * D 0\n0 0 0 * D\n0 0 0 0 *\n}\n```\n:::\n\n\n#### West to East Divergence with Gene Flow\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* 0 0 0 0\nD * 0 0 0\n0 D * 0 0\n0 0 D * 0\n0 0 0 D *\n}\n\n```\n:::\n\n\n#### East to West Divergence without Gene Flow\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* d 0 0 0\n0 * d 0 0\n0 0 * d 0\n0 0 0 * d\n0 0 0 0 *\n}\n```\n:::\n\n\n#### West to East Treemix\n\nBased on the treemix result above. Migration from the Societies to New Caledonia\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncustom-migration={\n* 0 0 0 0\nd * 0 * 0\n0 d * 0 0\n0 0 d * 0\n0 0 0 d *\n}\n\n```\n:::\n\n\n:::\n\n### Run It\n\nCopy it up to Nautilus, make 10 replicate folders.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nscp -r ./migrate/Models2 naut:./Daruanus3/rep1\n\nfor a in $(seq 2 10); do cp -r rep1 rep$a; done\n```\n:::\n\n\n#### Bash Script\n\nSo we will do 10 replicates of 3 replicates.  This will start at r1, and run all models for that before moving on. Pretty sure this will finish one whole model before moving on to the next one (since all threads are being used for different loci)\n\n\n\n::: {.cell}\n\n```{.bash .cell-code  code-fold=\"true\"}\n### Bash Script\n#!\nfor r in */\n        do\n        echo starting $r at $(date )>> progress.txt\n                cd $r\n                echo $r\n                date\n                date > progress.txt\n                        for m in */\n                          do\n                          echo starting $m at $(date )>> progress.txt\n                                cd $m\n                                  date > date.txt\n                                  echo $m\n                                  date\n                                  mpirun --use-hwthread-cpus -np 120 ~/migrate-4.4.4/src/migrate-n-mpi parmfile\n                                  sleep 1\n                                cd ..\n                          done\n                cd ..\n        done\n\n```\n:::\n\n\n#### Copy It Down\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nrsync -av -e ssh --exclude='bayes*' --exclude=\"*.pdf\" --exclude=\"*.mig\" ecrandall@nautilus.psu.edu:~/Daruanus3/ output3\n\nrsync -av -e ssh ecrandall@nautilus.psu.edu:~/daruanus/rep1/EtoW_DivMig output/rep1/EtoW_DivMig\n```\n:::\n\n\n### Results\n\n#### Function library\n\nStarting material for this one is from the Ptuberculosa_migrate.rmd\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nharvest.model.likelihoods <- function(workingDir = workingDir,\n                   outfileName = \"outfile.txt\",\n                    multilocus = T){\n    # this function harvests model marginal likelihoods for models calculated by\n    # the program migrate-n (Beerli & Felsenstein 2001).\n    # It takes as input a directory full of directories, \n    # each of which contains output from a migrate model, and is named\n    # after that model. \n  \n    #initialize a data frame to take the values\n    modelMarglikes <- data.frame(model=character(),\n                   thermodynamic=numeric(),\n                   bezier.corrected=numeric(), \n                   harmonic=numeric()) \n    # loop through directories in the working directory, each of which is name\n    # after a different model\n  for(i in list.dirs(workingDir, full.names = F)[-1]){ #i<-\"stepping.stone\"\n      modelDir<-file.path(workingDir,i)\n      print(modelDir)\n    #scan in the outfile, separating at each newline\n      outfile<-scan(file=file.path(modelDir,outfileName),\n                    what=\"character\",sep=\"\\n\") \n    #find the line with the likelihoods on it and split on runs of spaces\n      marglikeline <- str_which(outfile,\"Scaling factor\")-1\n      marglikeline <- strsplit(outfile[marglikeline],\n               \"\\\\s+\", perl = T)[[1]][3:5]\n    #  if(length(marglikeline)==0){next}\n      marglikes <- c(i,marglikeline)\n     \n      modelMarglikes <- rbind(modelMarglikes,marglikes, deparse.level = 2)\n  }\n  names(modelMarglikes) <- c(\"model\",\"thermodynamic\",\n                             \"bezier.corrected\",\"harmonic\")\n  modelMarglikes[2:4] <- sapply(modelMarglikes[2:4], as.numeric)\n  return(modelMarglikes)\n}\n\nbfcalcs<-function(df,ml=\"bezier.corrected\"){\n  # This calculates log bayes factors on data frames output by\n  # harvest.model.likelihoods(), following Johnson and Omland (2004)\n  # You may choose the likelihood flavor with\n  # ml = \"bezier.corrected\", \"thermodynamic\" or \"harmonic\"\n  #df$thermodynamic <- as.numeric(df$thermodynamic)\n  #df$bezier.corrected <- as.numeric(df$bezier.corrected)\n  #df$harmonic <- as.numeric(df$harmonic)\n  mlcol <- df[[ml]] \n bmvalue <- mlcol[which.max(mlcol)]\n lbf <- 2*(mlcol-bmvalue)\n choice <- rank(-mlcol)\n modelprob <- exp(lbf/2)/sum(exp(lbf/2))\n dfall <- cbind(df,lbf,choice,modelprob)\n return(dfall)\n} \n\nmigrants.per.gen<-function(x){\n  #a function for creating Nm vectors out of m and Theta vectors.\n  #x<-x[[1]]\n  m<-names(x)[which(grepl(\"M_\",names(x)))] #names of m columns\n  #theta<-names(x)[which(grepl(\"Theta_\",names(x)))] #names of theta columns\n  for(n in m){\n    t<-paste(\"Theta\",strsplit(n,split=\"_\")[[1]][3],sep=\"_\")\n    x[,paste(\"Nm\",strsplit(n,split=\"_\")[[1]][2],strsplit(n,split=\"_\")[[1]][3],sep=\"_\")]<- x[,which(names(x)==n)]*x[,which(names(x)==t)] \n    #this hairy little statement makes a new column named \"Nm_X_Y\" and then fills it by multiplying the M_X_Y column by the Theta_Y column \n  }\n  return(x)\n}\n\nremove_prior <- function(densityd,prior,threshold = 1e-10, quad_prec = F){\n  # this function removes a prior from the \n  # y values of a density distributions (density).\n  # first it zeros values less than a threshold, then \n  # removes the prior, then renormalizes so the density\n  # sums to 1.\n  # can optionally use the mpfr package for very small density values.\n  require(Rmpfr)\n  densityd[which(densityd < threshold)] <- 0\n  if(quad_prec){\n    densityd <- mpfr(densityd,precBits = 128)\n    }\n  new <- (densityd/prior)/sum(densityd/prior)\n  new <- as.numeric(new)\n  return(new)\n}\n\nsum_over_loci <- function(df,parameter){\n      #this function takes a data frame of probability densities for many loci\n      # that have had the prior removed,\n      # together with with a logged prior named \"logPrior\",\n      #  as well as the name of a parameter (e.g. \"Theta_1\")\n      # and sums the densities over loci.\n      # Rmpfr package allows quadruple precision for \n      #calcs on very small numbers.\n    require(Rmpfr)\n  \n    #add a teeny-tiny amount to all values to avoid zeros\n    df2 <- df %>% mutate(across(starts_with(parameter), \n                        .fns= function(x) x + 1e-11))  %>% \n      #log all values\n            mutate(across(starts_with(c(parameter)),\n                  .fns=log)) %>% \n      # convert the df to rowwise so that rows can be summed\n      # and then sum across the row, including the prior\n          rowwise() %>% \n          mutate(sum_param_prior = \n          sum(c_across(starts_with(c(parameter,\"logPrior\"))))) %>% \n    #convert back to a regular df\n          ungroup()\n    \n    #need to convert to quadruple precision because \n    #these will exponentiate to very small numbers.\n    sum_param_prior_exp <- exp(mpfr(df2$sum_param_prior, precBits = 128))\n    # standardize by dividing by the sum of the column\n    sum_param_prior_standardized <-\n             sum_param_prior_exp/sum(sum_param_prior_exp)\n    \n\n    #drop the intermediate columns (no longer needed), change the standardized\n    # output back to double precision so that it can be incorporated into the df\n    # rename the summed column after the parameter\n      df3 <- df2 %>% select(-c(sum_param_prior)) %>%\n          mutate(summed_over_loci =\n          as.numeric(sum_param_prior_standardized)) %>% \n          rename_with(.fn = ~ paste(parameter), \n                      .cols = summed_over_loci)\n    return(df3)\n}\n\n\n\nsummarize_posterior <- function(posterior, \n                  parameter_type = c(\"Theta\",\"M\",\"Nm\",\"D\"),\n                  prior,\n                  n=16384,\n                  ...){\n  # this function takes a Migrate-n posterior \"bayesallfile\" as a dataframe\n  # as well as one of the parameter types, and the prior on that parameter\n  # as a tibble of x and y values. \n  # Currently only exponential priors supported\n  # it will create densities for each parameter of the given type,\n  # remove the prior from each, sum across loci, and re-add the prior (once)\n  parameters <- names(posterior) %>%\n                        str_subset(parameter_type)\n\n  # create a tibble with x values for a density plot\n  #  of the chosen number of points\n  dens <- prior\n  \n  print(\"calculating densities\")\n  # calculate densities for each parameter of a given type at each locus\n  dens <- posterior %>% \n          select(starts_with(c(\"StepsR\",\"Locus\",\n                  paste0(parameter_type,\"_\")))) %>% \n          pivot_wider(names_from = \"Locus\", values_from = \n                  starts_with(paste0(parameter_type,\"_\")),\n                          names_sep = \"-\") %>% \n          select(starts_with(paste0(parameter_type,\"_\"))) %>% \n          map_dfc(function(x) density(x, n = n, from = 0,\n                                    bw = \"nrd0\")$y) %>%\n          bind_cols(dens)\n  \n  # create, standardize, log and remove prior\n\n  #check for NA values\n  #df %>% \n  #select_if(function(x) any(is.na(x))) %>% \n  #summarise_each(funs(sum(is.na(.)))) -> extra_NA\n  \n  \n  print(\"removing prior\")\n  dens2 <- dens %>% \n        #remove the prior, standardize\n        mutate(across(starts_with(parameter_type), \n                  ~ remove_prior(densityd = .x,\n                                  prior = dens$prior,\n                                  threshold = 1e-10,\n                                  ...) ))\n\n  dens3 <- dens2\n    \n  for(p in parameters){\n    print(p)  \n    dens3 <- sum_over_loci(df = dens3, parameter = p)\n  }\n  # trying to do the above loop with purrr:map_dfc\n  #dens4 <- parameters %>% \n  #        map_dfc(.f = ~ sum_over_loci(df = dens2, parameter = .x))\n  return(dens3)\n}\n\nposterior_stats <- function(df,parameter){\n  require(spatstat.core)\n  p <- df %>% select(all_of(c(\"x\",parameter))) %>% as.list(bw = 1)\n  names(p) <- c(\"x\", \"y\")\n  p$bw <- 1\n  attr(p, \"class\") <- \"density\"\n  qu <- quantile.density(p, c(0.025, 0.25, 0.5, 0.75, 0.975))\n  wmo <- p$x[which(p$y==max(p$y))]\n  wme <- weighted.mean(p$x, p$y)\n  wsd <- sqrt(weighted.var(p$x, p$y))\n  stats <- c(qu,mode = wmo, mean = wme, sd = wsd)\n  return(stats)\n}\n```\n:::\n\n\n\n#### Model Marginal Likelihoods\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nrunDir <- \"./migrate/output2\"\n\nlikelist <- list()\nfor(r in 1:10){\n  rep = paste0(\"rep\",r)\n  print(rep)\n  likelist[[rep]] <- harvest.model.likelihoods(workingDir=                                             file.path(runDir,rep))\n}\n\n# Model selection for each replicate...\nlikelist %>% map(bfcalcs)\n```\n:::\n\nThe final model marginal likelihood estimates based on the mean of 10 replicates. The best model is West to East divergence with migration as specified by Treemix (a single migration event from Societies to New Caledonia)!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlike.df <-  likelist %>% bind_rows() %>% group_by(model)\n\nmeans <- like.df %>% summarize(bezier.corrected = mean(bezier.corrected))\n  \n\nfinal_model <- bfcalcs(means)\n\nfinal_model\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"model\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"bezier.corrected\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"lbf\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"choice\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"modelprob\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2way.SS_Equilibrium\",\"2\":\"-40148607\",\"3\":\"-1111726.48\",\"4\":\"9\",\"5\":\"0\"},{\"1\":\"EtoW_DivMig\",\"2\":\"-39728954\",\"3\":\"-272420.61\",\"4\":\"5\",\"5\":\"0\"},{\"1\":\"EtoW_DivOnly\",\"2\":\"-39648958\",\"3\":\"-112428.41\",\"4\":\"4\",\"5\":\"0\"},{\"1\":\"EtoW_treemix\",\"2\":\"-39632763\",\"3\":\"-80039.79\",\"4\":\"2\",\"5\":\"0\"},{\"1\":\"EtoW.SS_Equilibrium\",\"2\":\"-39963458\",\"3\":\"-741428.37\",\"4\":\"7\",\"5\":\"0\"},{\"1\":\"n-Island\",\"2\":\"-40239658\",\"3\":\"-1293829.65\",\"4\":\"10\",\"5\":\"0\"},{\"1\":\"Panmixia\",\"2\":\"-60090371\",\"3\":\"-40995255.92\",\"4\":\"11\",\"5\":\"0\"},{\"1\":\"WtoE_DivMig\",\"2\":\"-39758536\",\"3\":\"-331584.48\",\"4\":\"6\",\"5\":\"0\"},{\"1\":\"WtoE_DivOnly\",\"2\":\"-39646758\",\"3\":\"-108028.60\",\"4\":\"3\",\"5\":\"0\"},{\"1\":\"WtoE_treemix\",\"2\":\"-39592743\",\"3\":\"0.00\",\"4\":\"1\",\"5\":\"1\"},{\"1\":\"WtoE.SS_Equilibrium\",\"2\":\"-39973016\",\"3\":\"-760545.54\",\"4\":\"8\",\"5\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n##### T-Test\n\nDifference between West to East Treemix and the second-place East to West Treemix model is not significant, due to fairly large variability in marginal likelhoods. Need to consider this in the discussion.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntop.choice <- final_model$model[which(final_model$choice ==1)]\nsecond.choice <- final_model$model[which(final_model$choice ==2)]\nthird.choice <- final_model$model[which(final_model$choice ==3)]\n\npermTS(like.df$bezier.corrected[which(like.df$model == top.choice)],\n       like.df$bezier.corrected[which(like.df$model == second.choice)],\n       alternative = \"greater\", method = \"exact.ce\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tExact Permutation Test (complete enumeration)\n\ndata:  GROUP 1 and GROUP 2\np-value = 0.1183\nalternative hypothesis: true mean GROUP 1 - mean GROUP 2 is greater than 0\nsample estimates:\nmean GROUP 1 - mean GROUP 2 \n                    40019.9 \n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\npermTS(like.df$bezier.corrected[which(like.df$model == top.choice)],\n       like.df$bezier.corrected[which(like.df$model == third.choice)],\n       alternative = \"greater\", method = \"exact.ce\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tExact Permutation Test (complete enumeration)\n\ndata:  GROUP 1 and GROUP 2\np-value = 0.09168\nalternative hypothesis: true mean GROUP 1 - mean GROUP 2 is greater than 0\nsample estimates:\nmean GROUP 1 - mean GROUP 2 \n                    54014.3 \n```\n:::\n:::\n\n\n##### Model Selection Figures\n\nAnd a figure summarizing all this\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nmodels <- c(\"2-way Stepping-Stone Equilibrium\",\n            \"E to W Divergence with Migration\",\n            \"E to W Divergence Only\",\n            \"E to W Treemix\", \n            \"E to W Stepping-Stone Equilibrium\",\n            \"n-Island\",\n            \"Panmixia\",\n            \"W to E Divergence with Migration\",\n            \"W to E Divergence Only\",\n            \"W to E Treemix\", \n            \"W to E Stepping-Stone Equilibrium\")\n\nlikesPlot <- likelist %>% bind_rows() %>% group_by(model) %>% \n              ggplot(mapping = aes(x=model, y = bezier.corrected)) +\n              geom_violin(draw_quantiles = 0.5) +\n              theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n              scale_x_discrete(labels = models) +\n              labs(x = \"Metapopulation Model\", y = \"Bezier Corrected Marginal Likelihood\") +\n              theme(axis.text.x = element_text(angle = 45, vjust = 1))\nlikesPlot\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-123-1.png){width=960}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nlikesPlot2 <- likesPlot + ylim(-4.05e7, -3.94e7)\n\nlikesPlot2\n```\n\n::: {.cell-output-display}\n![](Daruanus_IBD_migrate_files/figure-html/unnamed-chunk-123-2.png){width=960}\n:::\n:::\n\n#### Parameter Estimates\n\n##### Priors\n\nHere are the priors I'm using for  models, as a reminder.\n```\nbayes-priors= THETA * * WEXPPRIOR: 0.0 0.1 1.000000 0.1000 \nbayes-priors= MIG * * UNIFORMPRIOR: 0 300 30\ndivergence_distrib = E\nbayes-priors= SPLIT * * WEXPPRIOR: 0.0 0.01 1.000000 0.01000\nbayes-priors= SPLITSTD * * WEXPPRIOR: 0.0 0.01 1.000000 0.01000\n\n\n```\n\n\n\n\n",
    "supporting": [
      "Daruanus_IBD_migrate_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}